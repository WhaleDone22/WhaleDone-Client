{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { NOTICE_DATA } from \"./notice.data\";\nexport function noticeMock() {\n  var getAllNotice = function getAllNotice() {\n    return _regeneratorRuntime.async(function getAllNotice$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", NOTICE_DATA.GET_ALL);\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return {\n    getAllNotice: getAllNotice\n  };\n}","map":{"version":3,"sources":["C:/Users/lnr99/Documents/WhaleDone-Client/infrastructures/api/mock/notice.ts"],"names":["NOTICE_DATA","noticeMock","getAllNotice","GET_ALL"],"mappings":";AACA,SAASA,WAAT;AAEA,OAAO,SAASC,UAAT,GAAqC;AAC1C,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA,6CACZF,WAAW,CAACG,OADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAIA,SAAO;AAAED,IAAAA,YAAY,EAAZA;AAAF,GAAP;AACD","sourcesContent":["import { NoticeService } from '../notice';\r\nimport { NOTICE_DATA } from './notice.data';\r\n\r\nexport function noticeMock(): NoticeService {\r\n  const getAllNotice = async () => {\r\n    return NOTICE_DATA.GET_ALL;\r\n  };\r\n\r\n  return { getAllNotice };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}