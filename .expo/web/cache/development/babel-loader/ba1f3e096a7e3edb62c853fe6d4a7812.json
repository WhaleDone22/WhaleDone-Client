{"ast":null,"code":"import React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Swipeable, RectButton } from 'react-native-gesture-handler';\nimport { noticeToIcon } from \"../../infrastructures/types/notice\";\nimport COLORS from \"../styles/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    borderRadius: 10,\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderWidth: 1,\n    marginBottom: 8,\n    height: 88\n  },\n  containerSeen: {\n    backgroundColor: COLORS.GREY_020,\n    borderColor: COLORS.GREY_030\n  },\n  containerUnseen: {\n    backgroundColor: COLORS.BLUE_200,\n    borderColor: COLORS.BLUE_300\n  },\n  containerDelete: {\n    backgroundColor: COLORS.THEME_NEGATIVE,\n    borderWidth: 0,\n    flex: 1,\n    justifyContent: 'flex-end',\n    paddingEnd: 20\n  },\n  icon: {\n    width: 24,\n    height: 24\n  },\n  iconWrapper: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: 'white',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginHorizontal: 20\n  },\n  textWrapper: {\n    flex: 1\n  },\n  text: {\n    fontSize: 14,\n    fontFamily: 'Pretendard',\n    color: COLORS.TEXT_PRIMARY,\n    lineHeight: 21\n  },\n  subText: {\n    fontFamily: 'Pretendard-Bold'\n  },\n  textSeen: {\n    color: COLORS.TEXT_DISABLED_GREY\n  }\n});\n\nvar IcTrash = require(\"../../assets/ic-trash.png\");\n\nfunction NoticeItem(prop) {\n  var type = prop.type,\n      isSeen = prop.isSeen,\n      body = prop.body,\n      sub = prop.sub;\n  return _jsx(Swipeable, {\n    renderRightActions: function renderRightActions() {\n      return _jsx(RectButton, {\n        style: [styles.container, styles.containerDelete],\n        children: _jsx(Image, {\n          source: IcTrash,\n          style: styles.icon\n        })\n      });\n    },\n    children: _jsxs(RectButton, {\n      style: [styles.container, isSeen ? styles.containerSeen : styles.containerUnseen],\n      children: [_jsx(View, {\n        style: styles.iconWrapper,\n        children: _jsx(Image, {\n          source: noticeToIcon[type],\n          style: styles.icon\n        })\n      }), _jsxs(View, {\n        style: styles.textWrapper,\n        children: [_jsx(Text, {\n          style: [styles.text, isSeen && styles.textSeen],\n          children: body\n        }), sub && _jsx(Text, {\n          numberOfLines: 1,\n          style: [styles.text, styles.subText, isSeen && styles.textSeen],\n          children: sub\n        })]\n      })]\n    })\n  });\n}\n\nexport default NoticeItem;","map":{"version":3,"sources":["C:/Users/lnr99/Documents/WhaleDone-Client/presentation/components/NoticeItem.tsx"],"names":["React","Swipeable","RectButton","noticeToIcon","COLORS","styles","StyleSheet","create","container","borderRadius","flexDirection","alignItems","borderWidth","marginBottom","height","containerSeen","backgroundColor","GREY_020","borderColor","GREY_030","containerUnseen","BLUE_200","BLUE_300","containerDelete","THEME_NEGATIVE","flex","justifyContent","paddingEnd","icon","width","iconWrapper","marginHorizontal","textWrapper","text","fontSize","fontFamily","color","TEXT_PRIMARY","lineHeight","subText","textSeen","TEXT_DISABLED_GREY","IcTrash","require","NoticeItem","prop","type","isSeen","body","sub"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Image, StyleSheet, Text, View } from 'react-native';\r\nimport { Swipeable, RectButton } from 'react-native-gesture-handler';\r\nimport { Notice, noticeToIcon } from '../../infrastructures/types/notice';\r\nimport COLORS from '../styles/colors';\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    borderRadius: 10,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    borderWidth: 1,\r\n    marginBottom: 8,\r\n    height: 88,\r\n  },\r\n  containerSeen: {\r\n    backgroundColor: COLORS.GREY_020,\r\n    borderColor: COLORS.GREY_030,\r\n  },\r\n  containerUnseen: {\r\n    backgroundColor: COLORS.BLUE_200,\r\n    borderColor: COLORS.BLUE_300,\r\n  },\r\n  containerDelete: {\r\n    backgroundColor: COLORS.THEME_NEGATIVE,\r\n    borderWidth: 0,\r\n    flex: 1,\r\n    justifyContent: 'flex-end',\r\n    paddingEnd: 20,\r\n  },\r\n  icon: { width: 24, height: 24 },\r\n  iconWrapper: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 25,\r\n    backgroundColor: 'white',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginHorizontal: 20,\r\n  },\r\n  textWrapper: { flex: 1 },\r\n  text: {\r\n    fontSize: 14,\r\n    fontFamily: 'Pretendard',\r\n    color: COLORS.TEXT_PRIMARY,\r\n    lineHeight: 21,\r\n  },\r\n  subText: {\r\n    fontFamily: 'Pretendard-Bold',\r\n  },\r\n  textSeen: {\r\n    color: COLORS.TEXT_DISABLED_GREY,\r\n  },\r\n});\r\n\r\nconst IcTrash = require('../../assets/ic-trash.png');\r\n\r\nfunction NoticeItem(prop: Notice) {\r\n  const { type, isSeen, body, sub } = prop;\r\n  return (\r\n    <Swipeable\r\n      renderRightActions={() => (\r\n        <RectButton style={[styles.container, styles.containerDelete]}>\r\n          <Image source={IcTrash} style={styles.icon} />\r\n        </RectButton>\r\n      )}\r\n    >\r\n      <RectButton\r\n        style={[\r\n          styles.container,\r\n          isSeen ? styles.containerSeen : styles.containerUnseen,\r\n        ]}\r\n      >\r\n        <View style={styles.iconWrapper}>\r\n          <Image source={noticeToIcon[type]} style={styles.icon} />\r\n        </View>\r\n        <View style={styles.textWrapper}>\r\n          <Text style={[styles.text, isSeen && styles.textSeen]}>{body}</Text>\r\n          {sub && (\r\n            <Text\r\n              numberOfLines={1}\r\n              style={[styles.text, styles.subText, isSeen && styles.textSeen]}\r\n            >\r\n              {sub}\r\n            </Text>\r\n          )}\r\n        </View>\r\n      </RectButton>\r\n    </Swipeable>\r\n  );\r\n}\r\n\r\nexport default NoticeItem;\r\n"]},"metadata":{},"sourceType":"module"}