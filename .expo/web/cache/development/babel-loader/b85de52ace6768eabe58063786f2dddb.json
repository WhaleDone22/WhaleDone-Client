{"ast":null,"code":"export var validateEmail = function validateEmail(email) {\n  var emailRegex = /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i;\n  return emailRegex.test(email);\n};\nexport var validateNickName = function validateNickName(nickName) {\n  var nickNameRegex = /(^[0-9a-zA-Z,\\.\\*\\_\\-\\+\\?\\!ㄱ-ㅎㅏ-ㅣ가-힣]*$)/;\n  return nickNameRegex.test(nickName);\n};\nexport var validatePassword = function validatePassword(password) {\n  var passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d$@$!%*?&]{8,}$/;\n  return passwordRegex.test(password);\n};","map":{"version":3,"sources":["C:/Users/lnr99/Documents/WhaleDone-Client/infrastructures/utils/strings.ts"],"names":["validateEmail","email","emailRegex","test","validateNickName","nickName","nickNameRegex","validatePassword","password","passwordRegex"],"mappings":"AAEA,OAAO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAA4B;AACvD,MAAMC,UAAU,GACd,iSADF;AAEA,SAAOA,UAAU,CAACC,IAAX,CAAgBF,KAAhB,CAAP;AACD,CAJM;AAMP,OAAO,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,QAAD,EAA+B;AAC7D,MAAMC,aAAa,GAAG,0CAAtB;AACA,SAAOA,aAAa,CAACH,IAAd,CAAmBE,QAAnB,CAAP;AACD,CAHM;AAKP,OAAO,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,QAAD,EAA+B;AAC7D,MAAMC,aAAa,GACjB,wDADF;AAEA,SAAOA,aAAa,CAACN,IAAd,CAAmBK,QAAnB,CAAP;AACD,CAJM","sourcesContent":["/* eslint-disable no-useless-escape */\n\nexport const validateEmail = (email: string): boolean => {\n  const emailRegex =\n    /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i;\n  return emailRegex.test(email);\n};\n\nexport const validateNickName = (nickName: string): boolean => {\n  const nickNameRegex = /(^[0-9a-zA-Z,\\.\\*\\_\\-\\+\\?\\!ㄱ-ㅎㅏ-ㅣ가-힣]*$)/;\n  return nickNameRegex.test(nickName);\n};\n\nexport const validatePassword = (password: string): boolean => {\n  const passwordRegex =\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d$@$!%*?&]{8,}$/;\n  return passwordRegex.test(password);\n};\n"]},"metadata":{},"sourceType":"module"}