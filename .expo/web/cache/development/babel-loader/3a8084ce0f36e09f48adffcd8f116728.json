{"ast":null,"code":"import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FeedScreen from \"./Feed\";\nimport MapScreen from \"./Map\";\nimport HomeScreen from \"./Home\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar IcHomeSelectedTrue = require(\"../../../assets/ic-home-selected-true.png\");\n\nvar IcHomeSelectedFalse = require(\"../../../assets/ic-home-selected-false.png\");\n\nvar IcMapSelectedTrue = require(\"../../../assets/ic-map-selected-true.png\");\n\nvar IcMapSelectedFalse = require(\"../../../assets/ic-map-selected-false.png\");\n\nvar IcFeedSelectedTrue = require(\"../../../assets/ic-feed-selected-true.png\");\n\nvar IcFeedSelectedFalse = require(\"../../../assets/ic-feed-selected-false.png\");\n\nvar Tab = createBottomTabNavigator();\nvar styles = StyleSheet.create({\n  icon: {\n    height: 24,\n    width: 24,\n    marginTop: 6\n  },\n  label: {\n    fontSize: 12,\n    marginTop: 2,\n    fontFamily: 'Pretendard',\n    color: '#ACB3BC'\n  },\n  labelFocused: {\n    color: '#000000'\n  }\n});\n\nfunction BottomNavigation() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused;\n\n          switch (route.name) {\n            case 'Home':\n              return _jsx(Image, {\n                source: focused ? IcHomeSelectedTrue : IcHomeSelectedFalse,\n                style: styles.icon\n              });\n\n            case 'Map':\n              return _jsx(Image, {\n                source: focused ? IcMapSelectedTrue : IcMapSelectedFalse,\n                style: styles.icon\n              });\n\n            case 'Feed':\n              return _jsx(Image, {\n                source: focused ? IcFeedSelectedTrue : IcFeedSelectedFalse,\n                style: styles.icon\n              });\n\n            default:\n              return _jsx(Text, {});\n          }\n        },\n        tabBarLabel: function tabBarLabel(_ref3) {\n          var focused = _ref3.focused;\n\n          switch (route.name) {\n            case 'Home':\n              return _jsx(Text, {\n                style: [styles.label, focused && styles.labelFocused],\n                children: \"\\uC77C\\uC0C1\\uACF5\\uC720\"\n              });\n\n            case 'Map':\n              return _jsx(Text, {\n                style: [styles.label, focused && styles.labelFocused],\n                children: \"\\uB9C8\\uC74C\\uAC70\\uB9AC\"\n              });\n\n            case 'Feed':\n              return _jsx(Text, {\n                style: [styles.label, focused && styles.labelFocused],\n                children: \"\\uC18C\\uD1B5\\uD568\"\n              });\n\n            default:\n              return '';\n          }\n        },\n        tabBarLabelStyle: {\n          borderTopColor: '#ACB3BC',\n          marginTop: 9\n        },\n        headerShown: false\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Feed\",\n      component: FeedScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Map\",\n      component: MapScreen\n    })]\n  });\n}\n\nexport default BottomNavigation;","map":{"version":3,"sources":["C:/Users/lnr99/Documents/WhaleDone-Client/presentation/screens/Main/BottomNavigation.tsx"],"names":["createBottomTabNavigator","React","FeedScreen","MapScreen","HomeScreen","IcHomeSelectedTrue","require","IcHomeSelectedFalse","IcMapSelectedTrue","IcMapSelectedFalse","IcFeedSelectedTrue","IcFeedSelectedFalse","Tab","styles","StyleSheet","create","icon","height","width","marginTop","label","fontSize","fontFamily","color","labelFocused","BottomNavigation","route","tabBarIcon","focused","name","tabBarLabel","tabBarLabelStyle","borderTopColor","headerShown"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-unstable-nested-components */\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport React from 'react';\r\nimport { Image, StyleSheet, Text } from 'react-native';\r\nimport FeedScreen from './Feed';\r\nimport MapScreen from './Map';\r\nimport HomeScreen from './Home';\r\n\r\nconst IcHomeSelectedTrue = require(`../../../assets/ic-home-selected-true.png`);\r\nconst IcHomeSelectedFalse = require(`../../../assets/ic-home-selected-false.png`);\r\nconst IcMapSelectedTrue = require(`../../../assets/ic-map-selected-true.png`);\r\nconst IcMapSelectedFalse = require(`../../../assets/ic-map-selected-false.png`);\r\nconst IcFeedSelectedTrue = require(`../../../assets/ic-feed-selected-true.png`);\r\nconst IcFeedSelectedFalse = require(`../../../assets/ic-feed-selected-false.png`);\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst styles = StyleSheet.create({\r\n  icon: { height: 24, width: 24, marginTop: 6 },\r\n  label: {\r\n    fontSize: 12,\r\n    marginTop: 2,\r\n    fontFamily: 'Pretendard',\r\n    color: '#ACB3BC',\r\n  },\r\n  labelFocused: {\r\n    color: '#000000',\r\n  },\r\n});\r\n\r\nfunction BottomNavigation() {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused }) => {\r\n          switch (route.name) {\r\n            case 'Home':\r\n              return (\r\n                <Image\r\n                  source={focused ? IcHomeSelectedTrue : IcHomeSelectedFalse}\r\n                  style={styles.icon}\r\n                />\r\n              );\r\n            case 'Map':\r\n              return (\r\n                <Image\r\n                  source={focused ? IcMapSelectedTrue : IcMapSelectedFalse}\r\n                  style={styles.icon}\r\n                />\r\n              );\r\n            case 'Feed':\r\n              return (\r\n                <Image\r\n                  source={focused ? IcFeedSelectedTrue : IcFeedSelectedFalse}\r\n                  style={styles.icon}\r\n                />\r\n              );\r\n            default:\r\n              return <Text />;\r\n          }\r\n        },\r\n        tabBarLabel: ({ focused }) => {\r\n          switch (route.name) {\r\n            case 'Home':\r\n              return (\r\n                <Text style={[styles.label, focused && styles.labelFocused]}>\r\n                  일상공유\r\n                </Text>\r\n              );\r\n            case 'Map':\r\n              return (\r\n                <Text style={[styles.label, focused && styles.labelFocused]}>\r\n                  마음거리\r\n                </Text>\r\n              );\r\n            case 'Feed':\r\n              return (\r\n                <Text style={[styles.label, focused && styles.labelFocused]}>\r\n                  소통함\r\n                </Text>\r\n              );\r\n            default:\r\n              return '';\r\n          }\r\n        },\r\n        tabBarLabelStyle: {\r\n          borderTopColor: '#ACB3BC',\r\n          marginTop: 9,\r\n        },\r\n        headerShown: false,\r\n      })}\r\n    >\r\n      <Tab.Screen name=\"Home\" component={HomeScreen} />\r\n      <Tab.Screen name=\"Feed\" component={FeedScreen} />\r\n      <Tab.Screen name=\"Map\" component={MapScreen} />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\nexport default BottomNavigation;\r\n"]},"metadata":{},"sourceType":"module"}