{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TextInput } from 'react-native-gesture-handler';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { validateEmail } from \"../../../infrastructures/utils/strings\";\nimport ButtonBack from \"../../components/ButtonBack\";\nimport ButtonNext from \"../../components/ButtonNext\";\nimport COLORS from \"../../styles/colors\";\nimport { commonStyles } from \"../../styles/common\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  textInput: {\n    paddingVertical: 16,\n    paddingHorizontal: 20,\n    borderRadius: 5,\n    backgroundColor: COLORS.GREY_030,\n    marginVertical: 12,\n    fontSize: 16,\n    borderColor: 'transparent'\n  },\n  errorText: {\n    color: COLORS.THEME_NEGATIVE,\n    fontFamily: 'Pretendard',\n    fontSize: 12,\n    paddingLeft: 12\n  }\n});\n\nfunction EmailInputScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isValidate = _useState4[0],\n      setIsValidate = _useState4[1];\n\n  useEffect(function () {\n    setIsValidate(validateEmail(email));\n  }, [email]);\n  return _jsxs(SafeAreaView, {\n    style: commonStyles.container,\n    children: [_jsx(ButtonBack, {\n      onPress: function onPress() {\n        return navigation.goBack();\n      }\n    }), _jsx(View, {\n      style: commonStyles.titleWrapper,\n      children: _jsx(Text, {\n        style: commonStyles.title,\n        children: \"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n      })\n    }), _jsx(TextInput, {\n      value: email,\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      },\n      style: styles.textInput,\n      placeholder: \"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n      placeholderTextColor: COLORS.TEXT_DISABLED_GREY,\n      keyboardType: \"email-address\",\n      autoFocus: true\n    }), !isValidate && email !== '' && _jsx(Text, {\n      style: styles.errorText,\n      children: \"\\uC62C\\uBC14\\uB978 \\uC774\\uBA54\\uC77C \\uD615\\uD0DC\\uAC00 \\uC544\\uB2C8\\uC5D0\\uC694. \\uB2E4\\uC2DC \\uC785\\uB825\\uD558\\uC138\\uC694\"\n    }), _jsx(View, {\n      style: {\n        marginTop: 22\n      },\n      children: _jsx(ButtonNext, {\n        onPress: function onPress() {\n          return navigation.navigate('PasswordInput');\n        },\n        isActivated: isValidate\n      })\n    })]\n  });\n}\n\nexport default EmailInputScreen;","map":{"version":3,"sources":["C:/Users/lnr99/Documents/WhaleDone-Client/presentation/screens/Signup/EmailInput.tsx"],"names":["React","useEffect","useState","TextInput","SafeAreaView","validateEmail","ButtonBack","ButtonNext","COLORS","commonStyles","styles","StyleSheet","create","textInput","paddingVertical","paddingHorizontal","borderRadius","backgroundColor","GREY_030","marginVertical","fontSize","borderColor","errorText","color","THEME_NEGATIVE","fontFamily","paddingLeft","EmailInputScreen","navigation","email","setEmail","isValidate","setIsValidate","container","goBack","titleWrapper","title","text","TEXT_DISABLED_GREY","marginTop","navigate"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAEA,SAASC,SAAT,QAA0B,8BAA1B;AACA,SAASC,YAAT,QAA6B,gCAA7B;AAEA,SAASC,aAAT;AACA,OAAOC,UAAP;AACA,OAAOC,UAAP;AACA,OAAOC,MAAP;AACA,SAASC,YAAT;;;AAOA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,eAAe,EAAE,EADR;AAETC,IAAAA,iBAAiB,EAAE,EAFV;AAGTC,IAAAA,YAAY,EAAE,CAHL;AAITC,IAAAA,eAAe,EAAET,MAAM,CAACU,QAJf;AAKTC,IAAAA,cAAc,EAAE,EALP;AAMTC,IAAAA,QAAQ,EAAE,EAND;AAOTC,IAAAA,WAAW,EAAE;AAPJ,GADoB;AAU/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAEf,MAAM,CAACgB,cADL;AAETC,IAAAA,UAAU,EAAE,YAFH;AAGTL,IAAAA,QAAQ,EAAE,EAHD;AAITM,IAAAA,WAAW,EAAE;AAJJ;AAVoB,CAAlB,CAAf;;AAkBA,SAASC,gBAAT,OAAgE;AAAA,MAApCC,UAAoC,QAApCA,UAAoC;;AAC9D,kBAA0B1B,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAO2B,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAoC5B,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAO6B,UAAP;AAAA,MAAmBC,aAAnB;;AACA/B,EAAAA,SAAS,CAAC,YAAM;AACd+B,IAAAA,aAAa,CAAC3B,aAAa,CAACwB,KAAD,CAAd,CAAb;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAGA,SACE,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEpB,YAAY,CAACwB,SAAlC;AAAA,eACE,KAAC,UAAD;AAAY,MAAA,OAAO,EAAE;AAAA,eAAML,UAAU,CAACM,MAAX,EAAN;AAAA;AAArB,MADF,EAEE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEzB,YAAY,CAAC0B,YAA1B;AAAA,gBACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE1B,YAAY,CAAC2B,KAA1B;AAAA;AAAA;AADF,MAFF,EAKE,KAAC,SAAD;AACE,MAAA,KAAK,EAAEP,KADT;AAEE,MAAA,YAAY,EAAE,sBAACQ,IAAD;AAAA,eAAUP,QAAQ,CAACO,IAAD,CAAlB;AAAA,OAFhB;AAGE,MAAA,KAAK,EAAE3B,MAAM,CAACG,SAHhB;AAIE,MAAA,WAAW,EAAC,yDAJd;AAKE,MAAA,oBAAoB,EAAEL,MAAM,CAAC8B,kBAL/B;AAME,MAAA,YAAY,EAAC,eANf;AAOE,MAAA,SAAS;AAPX,MALF,EAcG,CAACP,UAAD,IAAeF,KAAK,KAAK,EAAzB,IACC,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEnB,MAAM,CAACY,SAApB;AAAA;AAAA,MAfJ,EAmBE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEiB,QAAAA,SAAS,EAAE;AAAb,OAAb;AAAA,gBACE,KAAC,UAAD;AACE,QAAA,OAAO,EAAE;AAAA,iBAAMX,UAAU,CAACY,QAAX,CAAoB,eAApB,CAAN;AAAA,SADX;AAEE,QAAA,WAAW,EAAET;AAFf;AADF,MAnBF;AAAA,IADF;AA4BD;;AAED,eAAeJ,gBAAf","sourcesContent":["import { NativeStackScreenProps } from '@react-navigation/native-stack';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Text, StyleSheet, View } from 'react-native';\r\nimport { TextInput } from 'react-native-gesture-handler';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { NavigationStackParams } from '../../../infrastructures/types/NavigationStackParams';\r\nimport { validateEmail } from '../../../infrastructures/utils/strings';\r\nimport ButtonBack from '../../components/ButtonBack';\r\nimport ButtonNext from '../../components/ButtonNext';\r\nimport COLORS from '../../styles/colors';\r\nimport { commonStyles } from '../../styles/common';\r\n\r\ntype EmailInputScreenProp = NativeStackScreenProps<\r\n  NavigationStackParams,\r\n  'EmailInput'\r\n>;\r\n\r\nconst styles = StyleSheet.create({\r\n  textInput: {\r\n    paddingVertical: 16,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 5,\r\n    backgroundColor: COLORS.GREY_030,\r\n    marginVertical: 12,\r\n    fontSize: 16,\r\n    borderColor: 'transparent',\r\n  },\r\n  errorText: {\r\n    color: COLORS.THEME_NEGATIVE,\r\n    fontFamily: 'Pretendard',\r\n    fontSize: 12,\r\n    paddingLeft: 12,\r\n  },\r\n});\r\n\r\nfunction EmailInputScreen({ navigation }: EmailInputScreenProp) {\r\n  const [email, setEmail] = useState('');\r\n  const [isValidate, setIsValidate] = useState(false);\r\n  useEffect(() => {\r\n    setIsValidate(validateEmail(email));\r\n  }, [email]);\r\n  return (\r\n    <SafeAreaView style={commonStyles.container}>\r\n      <ButtonBack onPress={() => navigation.goBack()} />\r\n      <View style={commonStyles.titleWrapper}>\r\n        <Text style={commonStyles.title}>이메일을 입력하세요</Text>\r\n      </View>\r\n      <TextInput\r\n        value={email}\r\n        onChangeText={(text) => setEmail(text)}\r\n        style={styles.textInput}\r\n        placeholder=\"이메일을 입력하세요\"\r\n        placeholderTextColor={COLORS.TEXT_DISABLED_GREY}\r\n        keyboardType=\"email-address\"\r\n        autoFocus\r\n      />\r\n      {!isValidate && email !== '' && (\r\n        <Text style={styles.errorText}>\r\n          올바른 이메일 형태가 아니에요. 다시 입력하세요\r\n        </Text>\r\n      )}\r\n      <View style={{ marginTop: 22 }}>\r\n        <ButtonNext\r\n          onPress={() => navigation.navigate('PasswordInput')}\r\n          isActivated={isValidate}\r\n        />\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nexport default EmailInputScreen;\r\n"]},"metadata":{},"sourceType":"module"}