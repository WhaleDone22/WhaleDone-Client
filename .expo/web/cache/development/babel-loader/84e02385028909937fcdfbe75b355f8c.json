{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { TextInput } from 'react-native-gesture-handler';\nimport ButtonBack from \"../../components/ButtonBack\";\nimport COLORS from \"../../styles/colors\";\nimport { validateNickName } from \"../../../infrastructures/utils/strings\";\nimport ButtonNext from \"../../components/ButtonNext\";\nimport { commonStyles } from \"../../styles/common\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  textInput: {\n    paddingVertical: 16,\n    paddingHorizontal: 20,\n    borderRadius: 5,\n    backgroundColor: COLORS.GREY_030,\n    marginVertical: 12,\n    fontSize: 16,\n    borderColor: 'transparent'\n  },\n  hintText: {\n    color: COLORS.THEME_PRIMARY,\n    fontFamily: 'Pretendard',\n    fontSize: 12,\n    paddingLeft: 12\n  }\n});\n\nfunction NicknameInputScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      nickName = _useState2[0],\n      setNickName = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isValidate = _useState4[0],\n      setIsValidate = _useState4[1];\n\n  useEffect(function () {\n    setIsValidate(validateNickName(nickName));\n  });\n  return _jsxs(SafeAreaView, {\n    style: commonStyles.container,\n    children: [_jsx(ButtonBack, {\n      onPress: function onPress() {\n        return navigation.goBack();\n      }\n    }), _jsx(View, {\n      style: commonStyles.titleWrapper,\n      children: _jsx(Text, {\n        style: commonStyles.title,\n        children: \"\\uB2C9\\uB124\\uC784\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n      })\n    }), _jsx(TextInput, {\n      value: nickName,\n      onChangeText: function onChangeText(text) {\n        return text.length < 6 && setNickName(text);\n      },\n      style: styles.textInput,\n      placeholder: \"\\uB2C9\\uB124\\uC784(\\uCD5C\\uB300 5\\uC790)\",\n      placeholderTextColor: COLORS.TEXT_DISABLED_GREY,\n      keyboardType: \"default\",\n      autoFocus: true\n    }), _jsx(Text, {\n      style: styles.hintText,\n      children: \"\\uD55C\\uAE00/\\uC601\\uBB38/\\uC22B\\uC790/\\uD2B9\\uC218\\uBB38\\uC790(*,._-+!?)\\uAE4C\\uC9C0 \\uC785\\uB825 \\uAC00\\uB2A5\\uD574\\uC694\"\n    }), _jsx(View, {\n      style: {\n        marginTop: 22\n      },\n      children: _jsx(ButtonNext, {\n        onPress: function onPress() {\n          return navigation.navigate('Greet', {});\n        },\n        isActivated: isValidate && nickName.length < 6\n      })\n    })]\n  });\n}\n\nexport default NicknameInputScreen;","map":{"version":3,"sources":["C:/Users/lnr99/Documents/WhaleDone-Client/presentation/screens/Signup/NicknameInput.tsx"],"names":["React","useEffect","useState","SafeAreaView","TextInput","ButtonBack","COLORS","validateNickName","ButtonNext","commonStyles","styles","StyleSheet","create","textInput","paddingVertical","paddingHorizontal","borderRadius","backgroundColor","GREY_030","marginVertical","fontSize","borderColor","hintText","color","THEME_PRIMARY","fontFamily","paddingLeft","NicknameInputScreen","navigation","nickName","setNickName","isValidate","setIsValidate","container","goBack","titleWrapper","title","text","length","TEXT_DISABLED_GREY","marginTop","navigate"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAGA,SAASC,YAAT,QAA6B,gCAA7B;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,OAAOC,UAAP;AAEA,OAAOC,MAAP;AACA,SAASC,gBAAT;AACA,OAAOC,UAAP;AACA,SAASC,YAAT;;;AAOA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,eAAe,EAAE,EADR;AAETC,IAAAA,iBAAiB,EAAE,EAFV;AAGTC,IAAAA,YAAY,EAAE,CAHL;AAITC,IAAAA,eAAe,EAAEX,MAAM,CAACY,QAJf;AAKTC,IAAAA,cAAc,EAAE,EALP;AAMTC,IAAAA,QAAQ,EAAE,EAND;AAOTC,IAAAA,WAAW,EAAE;AAPJ,GADoB;AAU/BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAEjB,MAAM,CAACkB,aADN;AAERC,IAAAA,UAAU,EAAE,YAFJ;AAGRL,IAAAA,QAAQ,EAAE,EAHF;AAIRM,IAAAA,WAAW,EAAE;AAJL;AAVqB,CAAlB,CAAf;;AAkBA,SAASC,mBAAT,OAAsE;AAAA,MAAvCC,UAAuC,QAAvCA,UAAuC;;AACpE,kBAAgC1B,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAO2B,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAoC5B,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAO6B,UAAP;AAAA,MAAmBC,aAAnB;;AACA/B,EAAAA,SAAS,CAAC,YAAM;AACd+B,IAAAA,aAAa,CAACzB,gBAAgB,CAACsB,QAAD,CAAjB,CAAb;AACD,GAFQ,CAAT;AAGA,SACE,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEpB,YAAY,CAACwB,SAAlC;AAAA,eACE,KAAC,UAAD;AAAY,MAAA,OAAO,EAAE;AAAA,eAAML,UAAU,CAACM,MAAX,EAAN;AAAA;AAArB,MADF,EAEE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEzB,YAAY,CAAC0B,YAA1B;AAAA,gBACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE1B,YAAY,CAAC2B,KAA1B;AAAA;AAAA;AADF,MAFF,EAKE,KAAC,SAAD;AACE,MAAA,KAAK,EAAEP,QADT;AAEE,MAAA,YAAY,EAAE,sBAACQ,IAAD;AAAA,eAAUA,IAAI,CAACC,MAAL,GAAc,CAAd,IAAmBR,WAAW,CAACO,IAAD,CAAxC;AAAA,OAFhB;AAGE,MAAA,KAAK,EAAE3B,MAAM,CAACG,SAHhB;AAIE,MAAA,WAAW,EAAC,0CAJd;AAKE,MAAA,oBAAoB,EAAEP,MAAM,CAACiC,kBAL/B;AAME,MAAA,YAAY,EAAC,SANf;AAOE,MAAA,SAAS;AAPX,MALF,EAcE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE7B,MAAM,CAACY,QAApB;AAAA;AAAA,MAdF,EAiBE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEkB,QAAAA,SAAS,EAAE;AAAb,OAAb;AAAA,gBACE,KAAC,UAAD;AACE,QAAA,OAAO,EAAE;AAAA,iBAAMZ,UAAU,CAACa,QAAX,CAAoB,OAApB,EAA6B,EAA7B,CAAN;AAAA,SADX;AAEE,QAAA,WAAW,EAAEV,UAAU,IAAIF,QAAQ,CAACS,MAAT,GAAkB;AAF/C;AADF,MAjBF;AAAA,IADF;AA0BD;;AAED,eAAeX,mBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { NativeStackScreenProps } from '@react-navigation/native-stack';\nimport { Text, View, StyleSheet } from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { TextInput } from 'react-native-gesture-handler';\nimport ButtonBack from '../../components/ButtonBack';\nimport { NavigationStackParams } from '../../../infrastructures/types/NavigationStackParams';\nimport COLORS from '../../styles/colors';\nimport { validateNickName } from '../../../infrastructures/utils/strings';\nimport ButtonNext from '../../components/ButtonNext';\nimport { commonStyles } from '../../styles/common';\n\ntype NicknameInputScreenProp = NativeStackScreenProps<\n  NavigationStackParams,\n  'NicknameInput'\n>;\n\nconst styles = StyleSheet.create({\n  textInput: {\n    paddingVertical: 16,\n    paddingHorizontal: 20,\n    borderRadius: 5,\n    backgroundColor: COLORS.GREY_030,\n    marginVertical: 12,\n    fontSize: 16,\n    borderColor: 'transparent',\n  },\n  hintText: {\n    color: COLORS.THEME_PRIMARY,\n    fontFamily: 'Pretendard',\n    fontSize: 12,\n    paddingLeft: 12,\n  },\n});\n\nfunction NicknameInputScreen({ navigation }: NicknameInputScreenProp) {\n  const [nickName, setNickName] = useState('');\n  const [isValidate, setIsValidate] = useState(false);\n  useEffect(() => {\n    setIsValidate(validateNickName(nickName));\n  });\n  return (\n    <SafeAreaView style={commonStyles.container}>\n      <ButtonBack onPress={() => navigation.goBack()} />\n      <View style={commonStyles.titleWrapper}>\n        <Text style={commonStyles.title}>닉네임을 입력하세요</Text>\n      </View>\n      <TextInput\n        value={nickName}\n        onChangeText={(text) => text.length < 6 && setNickName(text)}\n        style={styles.textInput}\n        placeholder=\"닉네임(최대 5자)\"\n        placeholderTextColor={COLORS.TEXT_DISABLED_GREY}\n        keyboardType=\"default\"\n        autoFocus\n      />\n      <Text style={styles.hintText}>\n        한글/영문/숫자/특수문자(*,._-+!?)까지 입력 가능해요\n      </Text>\n      <View style={{ marginTop: 22 }}>\n        <ButtonNext\n          onPress={() => navigation.navigate('Greet', {})}\n          isActivated={isValidate && nickName.length < 6}\n        />\n      </View>\n    </SafeAreaView>\n  );\n}\n\nexport default NicknameInputScreen;\n"]},"metadata":{},"sourceType":"module"}