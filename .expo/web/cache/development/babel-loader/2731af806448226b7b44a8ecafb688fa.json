{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport ButtonBack from \"../../components/ButtonBack\";\nimport PhotoSelectorModal from \"../../components/PhotoSelectorModal\";\nimport COLORS from \"../../styles/colors\";\nimport { commonStyles } from \"../../styles/common\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar IcChatActiveFalse = require(\"../../../assets/ic-chat-active-false.png\");\n\nvar IcChatActiveTrue = require(\"../../../assets/ic-chat-active-true.png\");\n\nvar IcGalleryActiveFalse = require(\"../../../assets/ic-gallery-active-false.png\");\n\nvar IcGalleryActiveTrue = require(\"../../../assets/ic-gallery-active-true.png\");\n\nvar styles = StyleSheet.create({\n  image: {\n    width: width * 0.79,\n    height: height * 0.58,\n    borderRadius: 5\n  },\n  headerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  headerTitle: {\n    flex: 1,\n    marginStart: 8,\n    fontFamily: 'Pretendard-Bold',\n    fontSize: 18\n  },\n  uploadText: {\n    fontFamily: 'Pretendard-Bold',\n    fontSize: 16\n  },\n  uploadTextDisabled: {\n    color: COLORS.TEXT_DISABLED_GREY\n  },\n  uploadTextEnabled: {\n    color: COLORS.BLUE_500\n  },\n  bodyContainer: {\n    borderRadius: 10,\n    borderColor: COLORS.BLUE_200,\n    borderWidth: 1,\n    flex: 1,\n    backgroundColor: COLORS.BLUE_100,\n    marginTop: 34,\n    paddingHorizontal: 24\n  },\n  questionText: {\n    fontFamily: 'Pretendard-Bold',\n    fontSize: 22,\n    paddingTop: 30,\n    paddingBottom: 20\n  },\n  answerTextInput: {\n    height: 400,\n    paddingHorizontal: 10,\n    paddingVertical: 20,\n    fontSize: 16,\n    fontFamily: 'Pretendard'\n  },\n  answerTextCount: {\n    color: COLORS.TEXT_SECONDARY,\n    fontSize: 12,\n    fontFamily: 'Pretendard'\n  },\n  bottomContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginTop: 6,\n    height: 60\n  },\n  bottomButton: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingVertical: 15,\n    width: (width - 32) / 2\n  },\n  icon: {\n    width: 26,\n    height: 26,\n    marginRight: 5\n  },\n  iconLabel: {\n    fontFamily: 'Pretendard-Bold',\n    fontSize: 14,\n    color: COLORS.TEXT_PRIMARY\n  },\n  iconLabelInactive: {\n    color: COLORS.TEXT_DISABLED_GREY\n  }\n});\n\nfunction RecordScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      mode = _useState2[0],\n      setMode = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isModalVisible = _useState4[0],\n      setIsModalVisible = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pickedImagePath = _useState6[0],\n      _setPickedImagePath = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      text = _useState8[0],\n      setText = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isUploadable = _useState10[0],\n      setIsUploadable = _useState10[1];\n\n  useEffect(function () {\n    setIsUploadable(text.length > 10 || pickedImagePath !== '');\n  }, [text, pickedImagePath]);\n\n  var openModal = function openModal() {\n    return setIsModalVisible(true);\n  };\n\n  var closeModal = function closeModal() {\n    return setIsModalVisible(false);\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: commonStyles.container,\n    children: [_jsx(PhotoSelectorModal, {\n      isModalVisible: isModalVisible,\n      closeModal: closeModal,\n      setPickedImagePath: function setPickedImagePath(path) {\n        return _setPickedImagePath(path);\n      }\n    }), _jsxs(View, {\n      style: styles.headerContainer,\n      children: [_jsx(ButtonBack, {\n        onPress: function onPress() {\n          return navigation.goBack();\n        }\n      }), _jsx(Text, {\n        style: styles.headerTitle,\n        children: \"\\uC77C\\uC0C1 \\uACF5\\uC720 \\uC81C\\uBAA9\"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.push('Main', {\n            screen: 'Feed'\n          });\n        },\n        disabled: !isUploadable,\n        children: _jsx(Text, {\n          style: [styles.uploadText, isUploadable ? styles.uploadTextEnabled : styles.uploadTextDisabled],\n          children: \"\\uC5C5\\uB85C\\uB4DC\"\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.bodyContainer,\n      children: [_jsx(Text, {\n        style: styles.questionText,\n        children: \"\\uC9C8\\uBB38\\uC9C8\\uBB38?\"\n      }), mode && mode === 'TEXT' ? _jsxs(View, {\n        children: [_jsxs(Text, {\n          style: styles.answerTextCount,\n          children: [\"(\", text.length, \"/180\\uC790)\"]\n        }), _jsx(TextInput, {\n          value: text,\n          placeholder: \"\\uB2F5\\uBCC0\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n          onChangeText: function onChangeText(input) {\n            return setText(input);\n          },\n          maxLength: 180,\n          multiline: true,\n          textAlignVertical: \"top\",\n          style: styles.answerTextInput,\n          placeholderTextColor: COLORS.TEXT_DISABLED_GREY\n        })]\n      }) : pickedImagePath !== '' && _jsx(Image, {\n        source: {\n          uri: pickedImagePath\n        },\n        style: styles.image\n      })]\n    }), _jsxs(View, {\n      style: styles.bottomContainer,\n      children: [_jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          openModal();\n          setMode('IMAGE');\n        },\n        style: styles.bottomButton,\n        children: [_jsx(Image, {\n          source: mode === 'IMAGE' ? IcGalleryActiveTrue : IcGalleryActiveFalse,\n          style: styles.icon\n        }), _jsx(Text, {\n          style: [styles.iconLabel, mode !== 'IMAGE' && styles.iconLabelInactive],\n          children: \"\\uC0AC\\uC9C4/\\uCD2C\\uC601\"\n        })]\n      }), _jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          return setMode('TEXT');\n        },\n        style: styles.bottomButton,\n        children: [_jsx(Image, {\n          source: mode === 'TEXT' ? IcChatActiveTrue : IcChatActiveFalse,\n          style: styles.icon\n        }), _jsx(Text, {\n          style: [styles.iconLabel, mode !== 'TEXT' && styles.iconLabelInactive],\n          children: \"\\uD14D\\uC2A4\\uD2B8\"\n        })]\n      })]\n    })]\n  });\n}\n\nexport default RecordScreen;","map":{"version":3,"sources":["C:/Users/lnr99/Documents/WhaleDone-Client/presentation/screens/Main/Record.tsx"],"names":["React","useEffect","useState","TouchableOpacity","SafeAreaView","ButtonBack","PhotoSelectorModal","COLORS","commonStyles","Dimensions","get","height","width","IcChatActiveFalse","require","IcChatActiveTrue","IcGalleryActiveFalse","IcGalleryActiveTrue","styles","StyleSheet","create","image","borderRadius","headerContainer","flexDirection","justifyContent","alignItems","headerTitle","flex","marginStart","fontFamily","fontSize","uploadText","uploadTextDisabled","color","TEXT_DISABLED_GREY","uploadTextEnabled","BLUE_500","bodyContainer","borderColor","BLUE_200","borderWidth","backgroundColor","BLUE_100","marginTop","paddingHorizontal","questionText","paddingTop","paddingBottom","answerTextInput","paddingVertical","answerTextCount","TEXT_SECONDARY","bottomContainer","bottomButton","icon","marginRight","iconLabel","TEXT_PRIMARY","iconLabelInactive","RecordScreen","navigation","mode","setMode","isModalVisible","setIsModalVisible","pickedImagePath","setPickedImagePath","text","setText","isUploadable","setIsUploadable","length","openModal","closeModal","container","path","goBack","push","screen","input","uri"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;AASA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,YAAT,QAA6B,gCAA7B;AAEA,OAAOC,UAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,MAAP;AACA,SAASC,YAAT;;;;AAIA,sBAA0BC,UAAU,CAACC,GAAX,CAAe,QAAf,CAA1B;AAAA,IAAQC,MAAR,mBAAQA,MAAR;AAAA,IAAgBC,KAAhB,mBAAgBA,KAAhB;;AAEA,IAAMC,iBAAiB,GAAGC,OAAO,4CAAjC;;AACA,IAAMC,gBAAgB,GAAGD,OAAO,2CAAhC;;AACA,IAAME,oBAAoB,GAAGF,OAAO,+CAApC;;AACA,IAAMG,mBAAmB,GAAGH,OAAO,8CAAnC;;AAEA,IAAMI,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,KAAK,EAAE;AACLT,IAAAA,KAAK,EAAEA,KAAK,GAAG,IADV;AAELD,IAAAA,MAAM,EAAEA,MAAM,GAAG,IAFZ;AAGLW,IAAAA,YAAY,EAAE;AAHT,GADwB;AAM/BC,EAAAA,eAAe,EAAE;AACfC,IAAAA,aAAa,EAAE,KADA;AAEfC,IAAAA,cAAc,EAAE,eAFD;AAGfC,IAAAA,UAAU,EAAE;AAHG,GANc;AAW/BC,EAAAA,WAAW,EAAE;AACXC,IAAAA,IAAI,EAAE,CADK;AAEXC,IAAAA,WAAW,EAAE,CAFF;AAGXC,IAAAA,UAAU,EAAE,iBAHD;AAIXC,IAAAA,QAAQ,EAAE;AAJC,GAXkB;AAiB/BC,EAAAA,UAAU,EAAE;AACVF,IAAAA,UAAU,EAAE,iBADF;AAEVC,IAAAA,QAAQ,EAAE;AAFA,GAjBmB;AAqB/BE,EAAAA,kBAAkB,EAAE;AAClBC,IAAAA,KAAK,EAAE3B,MAAM,CAAC4B;AADI,GArBW;AAwB/BC,EAAAA,iBAAiB,EAAE;AACjBF,IAAAA,KAAK,EAAE3B,MAAM,CAAC8B;AADG,GAxBY;AA2B/BC,EAAAA,aAAa,EAAE;AACbhB,IAAAA,YAAY,EAAE,EADD;AAEbiB,IAAAA,WAAW,EAAEhC,MAAM,CAACiC,QAFP;AAGbC,IAAAA,WAAW,EAAE,CAHA;AAIbb,IAAAA,IAAI,EAAE,CAJO;AAKbc,IAAAA,eAAe,EAAEnC,MAAM,CAACoC,QALX;AAMbC,IAAAA,SAAS,EAAE,EANE;AAObC,IAAAA,iBAAiB,EAAE;AAPN,GA3BgB;AAoC/BC,EAAAA,YAAY,EAAE;AACZhB,IAAAA,UAAU,EAAE,iBADA;AAEZC,IAAAA,QAAQ,EAAE,EAFE;AAGZgB,IAAAA,UAAU,EAAE,EAHA;AAIZC,IAAAA,aAAa,EAAE;AAJH,GApCiB;AA0C/BC,EAAAA,eAAe,EAAE;AACftC,IAAAA,MAAM,EAAE,GADO;AAEfkC,IAAAA,iBAAiB,EAAE,EAFJ;AAGfK,IAAAA,eAAe,EAAE,EAHF;AAIfnB,IAAAA,QAAQ,EAAE,EAJK;AAKfD,IAAAA,UAAU,EAAE;AALG,GA1Cc;AAiD/BqB,EAAAA,eAAe,EAAE;AACfjB,IAAAA,KAAK,EAAE3B,MAAM,CAAC6C,cADC;AAEfrB,IAAAA,QAAQ,EAAE,EAFK;AAGfD,IAAAA,UAAU,EAAE;AAHG,GAjDc;AAsD/BuB,EAAAA,eAAe,EAAE;AACf7B,IAAAA,aAAa,EAAE,KADA;AAEfE,IAAAA,UAAU,EAAE,QAFG;AAGfD,IAAAA,cAAc,EAAE,eAHD;AAIfmB,IAAAA,SAAS,EAAE,CAJI;AAKfjC,IAAAA,MAAM,EAAE;AALO,GAtDc;AA6D/B2C,EAAAA,YAAY,EAAE;AACZ1B,IAAAA,IAAI,EAAE,CADM;AAEZJ,IAAAA,aAAa,EAAE,KAFH;AAGZC,IAAAA,cAAc,EAAE,QAHJ;AAIZC,IAAAA,UAAU,EAAE,QAJA;AAKZwB,IAAAA,eAAe,EAAE,EALL;AAMZtC,IAAAA,KAAK,EAAE,CAACA,KAAK,GAAG,EAAT,IAAe;AANV,GA7DiB;AAqE/B2C,EAAAA,IAAI,EAAE;AACJ3C,IAAAA,KAAK,EAAE,EADH;AAEJD,IAAAA,MAAM,EAAE,EAFJ;AAGJ6C,IAAAA,WAAW,EAAE;AAHT,GArEyB;AA0E/BC,EAAAA,SAAS,EAAE;AACT3B,IAAAA,UAAU,EAAE,iBADH;AAETC,IAAAA,QAAQ,EAAE,EAFD;AAGTG,IAAAA,KAAK,EAAE3B,MAAM,CAACmD;AAHL,GA1EoB;AA+E/BC,EAAAA,iBAAiB,EAAE;AACjBzB,IAAAA,KAAK,EAAE3B,MAAM,CAAC4B;AADG;AA/EY,CAAlB,CAAf;;AAoFA,SAASyB,YAAT,OAAwD;AAAA,MAAhCC,UAAgC,QAAhCA,UAAgC;;AACtD,kBAAwB3D,QAAQ,CAA0B,IAA1B,CAAhC;AAAA;AAAA,MAAO4D,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA4C7D,QAAQ,CAAC,KAAD,CAApD;AAAA;AAAA,MAAO8D,cAAP;AAAA,MAAuBC,iBAAvB;;AACA,mBAA8C/D,QAAQ,CAAC,EAAD,CAAtD;AAAA;AAAA,MAAOgE,eAAP;AAAA,MAAwBC,mBAAxB;;AACA,mBAAwBjE,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOkE,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAwCnE,QAAQ,CAAC,KAAD,CAAhD;AAAA;AAAA,MAAOoE,YAAP;AAAA,MAAqBC,eAArB;;AAEAtE,EAAAA,SAAS,CAAC,YAAM;AACdsE,IAAAA,eAAe,CAACH,IAAI,CAACI,MAAL,GAAc,EAAd,IAAoBN,eAAe,KAAK,EAAzC,CAAf;AACD,GAFQ,EAEN,CAACE,IAAD,EAAOF,eAAP,CAFM,CAAT;;AAIA,MAAMO,SAAS,GAAG,SAAZA,SAAY;AAAA,WAAMR,iBAAiB,CAAC,IAAD,CAAvB;AAAA,GAAlB;;AACA,MAAMS,UAAU,GAAG,SAAbA,UAAa;AAAA,WAAMT,iBAAiB,CAAC,KAAD,CAAvB;AAAA,GAAnB;;AAEA,SACE,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEzD,YAAY,CAACmE,SAAlC;AAAA,eACE,KAAC,kBAAD;AACE,MAAA,cAAc,EAAEX,cADlB;AAEE,MAAA,UAAU,EAAEU,UAFd;AAGE,MAAA,kBAAkB,EAAE,4BAACE,IAAD;AAAA,eAAkBT,mBAAkB,CAACS,IAAD,CAApC;AAAA;AAHtB,MADF,EAME,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE1D,MAAM,CAACK,eAApB;AAAA,iBACE,KAAC,UAAD;AAAY,QAAA,OAAO,EAAE;AAAA,iBAAMsC,UAAU,CAACgB,MAAX,EAAN;AAAA;AAArB,QADF,EAEE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE3D,MAAM,CAACS,WAApB;AAAA;AAAA,QAFF,EAGE,KAAC,gBAAD;AACE,QAAA,OAAO,EAAE;AAAA,iBAAMkC,UAAU,CAACiB,IAAX,CAAgB,MAAhB,EAAwB;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAAxB,CAAN;AAAA,SADX;AAEE,QAAA,QAAQ,EAAE,CAACT,YAFb;AAAA,kBAIE,KAAC,IAAD;AACE,UAAA,KAAK,EAAE,CACLpD,MAAM,CAACc,UADF,EAELsC,YAAY,GACRpD,MAAM,CAACkB,iBADC,GAERlB,MAAM,CAACe,kBAJN,CADT;AAAA;AAAA;AAJF,QAHF;AAAA,MANF,EAyBE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEf,MAAM,CAACoB,aAApB;AAAA,iBACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEpB,MAAM,CAAC4B,YAApB;AAAA;AAAA,QADF,EAEGgB,IAAI,IAAIA,IAAI,KAAK,MAAjB,GACC,MAAC,IAAD;AAAA,mBACE,MAAC,IAAD;AAAM,UAAA,KAAK,EAAE5C,MAAM,CAACiC,eAApB;AAAA,0BAAuCiB,IAAI,CAACI,MAA5C;AAAA,UADF,EAEE,KAAC,SAAD;AACE,UAAA,KAAK,EAAEJ,IADT;AAEE,UAAA,WAAW,EAAC,mDAFd;AAGE,UAAA,YAAY,EAAE,sBAACY,KAAD;AAAA,mBAAWX,OAAO,CAACW,KAAD,CAAlB;AAAA,WAHhB;AAIE,UAAA,SAAS,EAAE,GAJb;AAKE,UAAA,SAAS,MALX;AAME,UAAA,iBAAiB,EAAC,KANpB;AAOE,UAAA,KAAK,EAAE9D,MAAM,CAAC+B,eAPhB;AAQE,UAAA,oBAAoB,EAAE1C,MAAM,CAAC4B;AAR/B,UAFF;AAAA,QADD,GAeC+B,eAAe,KAAK,EAApB,IACE,KAAC,KAAD;AAAO,QAAA,MAAM,EAAE;AAAEe,UAAAA,GAAG,EAAEf;AAAP,SAAf;AAAyC,QAAA,KAAK,EAAEhD,MAAM,CAACG;AAAvD,QAlBN;AAAA,MAzBF,EA+CE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEH,MAAM,CAACmC,eAApB;AAAA,iBACE,MAAC,gBAAD;AACE,QAAA,OAAO,EAAE,mBAAM;AACboB,UAAAA,SAAS;AACTV,UAAAA,OAAO,CAAC,OAAD,CAAP;AACD,SAJH;AAKE,QAAA,KAAK,EAAE7C,MAAM,CAACoC,YALhB;AAAA,mBAOE,KAAC,KAAD;AACE,UAAA,MAAM,EACJQ,IAAI,KAAK,OAAT,GAAmB7C,mBAAnB,GAAyCD,oBAF7C;AAIE,UAAA,KAAK,EAAEE,MAAM,CAACqC;AAJhB,UAPF,EAaE,KAAC,IAAD;AACE,UAAA,KAAK,EAAE,CACLrC,MAAM,CAACuC,SADF,EAELK,IAAI,KAAK,OAAT,IAAoB5C,MAAM,CAACyC,iBAFtB,CADT;AAAA;AAAA,UAbF;AAAA,QADF,EAuBE,MAAC,gBAAD;AACE,QAAA,OAAO,EAAE;AAAA,iBAAMI,OAAO,CAAC,MAAD,CAAb;AAAA,SADX;AAEE,QAAA,KAAK,EAAE7C,MAAM,CAACoC,YAFhB;AAAA,mBAIE,KAAC,KAAD;AACE,UAAA,MAAM,EAAEQ,IAAI,KAAK,MAAT,GAAkB/C,gBAAlB,GAAqCF,iBAD/C;AAEE,UAAA,KAAK,EAAEK,MAAM,CAACqC;AAFhB,UAJF,EAQE,KAAC,IAAD;AACE,UAAA,KAAK,EAAE,CACLrC,MAAM,CAACuC,SADF,EAELK,IAAI,KAAK,MAAT,IAAmB5C,MAAM,CAACyC,iBAFrB,CADT;AAAA;AAAA,UARF;AAAA,QAvBF;AAAA,MA/CF;AAAA,IADF;AA2FD;;AAED,eAAeC,YAAf","sourcesContent":["import { NativeStackScreenProps } from '@react-navigation/native-stack';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  Dimensions,\r\n  Image,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TextInput,\r\n} from 'react-native';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { NavigationStackParams } from '../../../infrastructures/types/NavigationStackParams';\r\nimport ButtonBack from '../../components/ButtonBack';\r\nimport PhotoSelectorModal from '../../components/PhotoSelectorModal';\r\nimport COLORS from '../../styles/colors';\r\nimport { commonStyles } from '../../styles/common';\r\n\r\ntype RecordScreenProp = NativeStackScreenProps<NavigationStackParams, 'Record'>;\r\n\r\nconst { height, width } = Dimensions.get('window');\r\n\r\nconst IcChatActiveFalse = require('../../../assets/ic-chat-active-false.png');\r\nconst IcChatActiveTrue = require('../../../assets/ic-chat-active-true.png');\r\nconst IcGalleryActiveFalse = require('../../../assets/ic-gallery-active-false.png');\r\nconst IcGalleryActiveTrue = require('../../../assets/ic-gallery-active-true.png');\r\n\r\nconst styles = StyleSheet.create({\r\n  image: {\r\n    width: width * 0.79,\r\n    height: height * 0.58,\r\n    borderRadius: 5,\r\n  },\r\n  headerContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  headerTitle: {\r\n    flex: 1,\r\n    marginStart: 8,\r\n    fontFamily: 'Pretendard-Bold',\r\n    fontSize: 18,\r\n  },\r\n  uploadText: {\r\n    fontFamily: 'Pretendard-Bold',\r\n    fontSize: 16,\r\n  },\r\n  uploadTextDisabled: {\r\n    color: COLORS.TEXT_DISABLED_GREY,\r\n  },\r\n  uploadTextEnabled: {\r\n    color: COLORS.BLUE_500,\r\n  },\r\n  bodyContainer: {\r\n    borderRadius: 10,\r\n    borderColor: COLORS.BLUE_200,\r\n    borderWidth: 1,\r\n    flex: 1,\r\n    backgroundColor: COLORS.BLUE_100,\r\n    marginTop: 34,\r\n    paddingHorizontal: 24,\r\n  },\r\n  questionText: {\r\n    fontFamily: 'Pretendard-Bold',\r\n    fontSize: 22,\r\n    paddingTop: 30,\r\n    paddingBottom: 20,\r\n  },\r\n  answerTextInput: {\r\n    height: 400,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 20,\r\n    fontSize: 16,\r\n    fontFamily: 'Pretendard',\r\n  },\r\n  answerTextCount: {\r\n    color: COLORS.TEXT_SECONDARY,\r\n    fontSize: 12,\r\n    fontFamily: 'Pretendard',\r\n  },\r\n  bottomContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    marginTop: 6,\r\n    height: 60,\r\n  },\r\n  bottomButton: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingVertical: 15,\r\n    width: (width - 32) / 2,\r\n  },\r\n  icon: {\r\n    width: 26,\r\n    height: 26,\r\n    marginRight: 5,\r\n  },\r\n  iconLabel: {\r\n    fontFamily: 'Pretendard-Bold',\r\n    fontSize: 14,\r\n    color: COLORS.TEXT_PRIMARY,\r\n  },\r\n  iconLabelInactive: {\r\n    color: COLORS.TEXT_DISABLED_GREY,\r\n  },\r\n});\r\n\r\nfunction RecordScreen({ navigation }: RecordScreenProp) {\r\n  const [mode, setMode] = useState<'TEXT' | 'IMAGE' | null>(null);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [pickedImagePath, setPickedImagePath] = useState('');\r\n  const [text, setText] = useState('');\r\n  const [isUploadable, setIsUploadable] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsUploadable(text.length > 10 || pickedImagePath !== '');\r\n  }, [text, pickedImagePath]);\r\n\r\n  const openModal = () => setIsModalVisible(true);\r\n  const closeModal = () => setIsModalVisible(false);\r\n\r\n  return (\r\n    <SafeAreaView style={commonStyles.container}>\r\n      <PhotoSelectorModal\r\n        isModalVisible={isModalVisible}\r\n        closeModal={closeModal}\r\n        setPickedImagePath={(path: string) => setPickedImagePath(path)}\r\n      />\r\n      <View style={styles.headerContainer}>\r\n        <ButtonBack onPress={() => navigation.goBack()} />\r\n        <Text style={styles.headerTitle}>일상 공유 제목</Text>\r\n        <TouchableOpacity\r\n          onPress={() => navigation.push('Main', { screen: 'Feed' })}\r\n          disabled={!isUploadable}\r\n        >\r\n          <Text\r\n            style={[\r\n              styles.uploadText,\r\n              isUploadable\r\n                ? styles.uploadTextEnabled\r\n                : styles.uploadTextDisabled,\r\n            ]}\r\n          >\r\n            업로드\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View style={styles.bodyContainer}>\r\n        <Text style={styles.questionText}>질문질문?</Text>\r\n        {mode && mode === 'TEXT' ? (\r\n          <View>\r\n            <Text style={styles.answerTextCount}>({text.length}/180자)</Text>\r\n            <TextInput\r\n              value={text}\r\n              placeholder=\"답변을 입력하세요\"\r\n              onChangeText={(input) => setText(input)}\r\n              maxLength={180}\r\n              multiline\r\n              textAlignVertical=\"top\"\r\n              style={styles.answerTextInput}\r\n              placeholderTextColor={COLORS.TEXT_DISABLED_GREY}\r\n            />\r\n          </View>\r\n        ) : (\r\n          pickedImagePath !== '' && (\r\n            <Image source={{ uri: pickedImagePath }} style={styles.image} />\r\n          )\r\n        )}\r\n      </View>\r\n      <View style={styles.bottomContainer}>\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            openModal();\r\n            setMode('IMAGE');\r\n          }}\r\n          style={styles.bottomButton}\r\n        >\r\n          <Image\r\n            source={\r\n              mode === 'IMAGE' ? IcGalleryActiveTrue : IcGalleryActiveFalse\r\n            }\r\n            style={styles.icon}\r\n          />\r\n          <Text\r\n            style={[\r\n              styles.iconLabel,\r\n              mode !== 'IMAGE' && styles.iconLabelInactive,\r\n            ]}\r\n          >\r\n            사진/촬영\r\n          </Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          onPress={() => setMode('TEXT')}\r\n          style={styles.bottomButton}\r\n        >\r\n          <Image\r\n            source={mode === 'TEXT' ? IcChatActiveTrue : IcChatActiveFalse}\r\n            style={styles.icon}\r\n          />\r\n          <Text\r\n            style={[\r\n              styles.iconLabel,\r\n              mode !== 'TEXT' && styles.iconLabelInactive,\r\n            ]}\r\n          >\r\n            텍스트\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nexport default RecordScreen;\r\n"]},"metadata":{},"sourceType":"module"}