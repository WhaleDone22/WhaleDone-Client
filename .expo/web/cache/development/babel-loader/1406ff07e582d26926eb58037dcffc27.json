{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { api } from \"../../../infrastructures/api\";\nimport ButtonBack from \"../../components/ButtonBack\";\nimport NoticesPerDay from \"../../components/NoticesPerDay\";\nimport COLORS from \"../../styles/colors\";\nimport { commonStyles } from \"../../styles/common\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  headerContainer: {\n    backgroundColor: 'white',\n    paddingBottom: 14,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  headerText: {\n    color: COLORS.TEXT_PRIMARY,\n    marginStart: 8,\n    fontFamily: 'Pretendard-Bold',\n    fontSize: 18\n  }\n});\n\nfunction NoticeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  useEffect(function () {\n    api.noticeService.getAllNotice().then(function (response) {\n      return setData(response);\n    });\n  }, []);\n  return _jsx(SafeAreaView, {\n    style: commonStyles.container,\n    children: _jsxs(ScrollView, {\n      stickyHeaderIndices: [0],\n      children: [_jsx(View, {\n        children: _jsxs(View, {\n          style: styles.headerContainer,\n          children: [_jsx(ButtonBack, {\n            onPress: function onPress() {\n              return navigation.goBack();\n            }\n          }), _jsx(Text, {\n            style: styles.headerText,\n            children: \"\\uC54C\\uB9BC\"\n          })]\n        })\n      }), data.map(function (notice) {\n        return _jsx(NoticesPerDay, _objectSpread({}, notice), notice.date);\n      })]\n    })\n  });\n}\n\nexport default NoticeScreen;","map":{"version":3,"sources":["C:/Users/lnr99/Documents/WhaleDone-Client/presentation/screens/Main/Notice.tsx"],"names":["React","useEffect","useState","ScrollView","SafeAreaView","api","ButtonBack","NoticesPerDay","COLORS","commonStyles","styles","StyleSheet","create","headerContainer","backgroundColor","paddingBottom","flexDirection","alignItems","justifyContent","headerText","color","TEXT_PRIMARY","marginStart","fontFamily","fontSize","NoticeScreen","navigation","data","setData","noticeService","getAllNotice","then","response","container","goBack","map","notice","date"],"mappings":";;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAEA,SAASC,UAAT,QAA2B,8BAA3B;AACA,SAASC,YAAT,QAA6B,gCAA7B;AACA,SAASC,GAAT;AAGA,OAAOC,UAAP;AACA,OAAOC,aAAP;AACA,OAAOC,MAAP;AACA,SAASC,YAAT;;;AAIA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,eAAe,EAAE;AACfC,IAAAA,eAAe,EAAE,OADF;AAEfC,IAAAA,aAAa,EAAE,EAFA;AAGfC,IAAAA,aAAa,EAAE,KAHA;AAIfC,IAAAA,UAAU,EAAE,QAJG;AAKfC,IAAAA,cAAc,EAAE;AALD,GADc;AAQ/BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAEZ,MAAM,CAACa,YADJ;AAEVC,IAAAA,WAAW,EAAE,CAFH;AAGVC,IAAAA,UAAU,EAAE,iBAHF;AAIVC,IAAAA,QAAQ,EAAE;AAJA;AARmB,CAAlB,CAAf;;AAgBA,SAASC,YAAT,OAAwD;AAAA,MAAhCC,UAAgC,QAAhCA,UAAgC;;AACtD,kBAAwBxB,QAAQ,CAAwC,EAAxC,CAAhC;AAAA;AAAA,MAAOyB,IAAP;AAAA,MAAaC,OAAb;;AAEA3B,EAAAA,SAAS,CAAC,YAAM;AACdI,IAAAA,GAAG,CAACwB,aAAJ,CAAkBC,YAAlB,GAAiCC,IAAjC,CAAsC,UAACC,QAAD;AAAA,aAAcJ,OAAO,CAACI,QAAD,CAArB;AAAA,KAAtC;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,KAAC,YAAD;AAAc,IAAA,KAAK,EAAEvB,YAAY,CAACwB,SAAlC;AAAA,cACE,MAAC,UAAD;AAAY,MAAA,mBAAmB,EAAE,CAAC,CAAD,CAAjC;AAAA,iBACE,KAAC,IAAD;AAAA,kBACE,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEvB,MAAM,CAACG,eAApB;AAAA,qBACE,KAAC,UAAD;AAAY,YAAA,OAAO,EAAE;AAAA,qBAAMa,UAAU,CAACQ,MAAX,EAAN;AAAA;AAArB,YADF,EAEE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAExB,MAAM,CAACS,UAApB;AAAA;AAAA,YAFF;AAAA;AADF,QADF,EAOGQ,IAAI,CAACQ,GAAL,CAAS,UAACC,MAAD;AAAA,eACR,KAAC,aAAD,oBAAqCA,MAArC,GAAoBA,MAAM,CAACC,IAA3B,CADQ;AAAA,OAAT,CAPH;AAAA;AADF,IADF;AAeD;;AAED,eAAeZ,YAAf","sourcesContent":["import { NativeStackScreenProps } from '@react-navigation/native-stack';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { api } from '../../../infrastructures/api';\r\nimport { NavigationStackParams } from '../../../infrastructures/types/NavigationStackParams';\r\nimport { Notice } from '../../../infrastructures/types/notice';\r\nimport ButtonBack from '../../components/ButtonBack';\r\nimport NoticesPerDay from '../../components/NoticesPerDay';\r\nimport COLORS from '../../styles/colors';\r\nimport { commonStyles } from '../../styles/common';\r\n\r\ntype NoticeScreenProp = NativeStackScreenProps<NavigationStackParams, 'Notice'>;\r\n\r\nconst styles = StyleSheet.create({\r\n  headerContainer: {\r\n    backgroundColor: 'white',\r\n    paddingBottom: 14,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n  },\r\n  headerText: {\r\n    color: COLORS.TEXT_PRIMARY,\r\n    marginStart: 8,\r\n    fontFamily: 'Pretendard-Bold',\r\n    fontSize: 18,\r\n  },\r\n});\r\n\r\nfunction NoticeScreen({ navigation }: NoticeScreenProp) {\r\n  const [data, setData] = useState<{ date: string; notices: Notice[] }[]>([]);\r\n\r\n  useEffect(() => {\r\n    api.noticeService.getAllNotice().then((response) => setData(response));\r\n  }, []);\r\n\r\n  return (\r\n    <SafeAreaView style={commonStyles.container}>\r\n      <ScrollView stickyHeaderIndices={[0]}>\r\n        <View>\r\n          <View style={styles.headerContainer}>\r\n            <ButtonBack onPress={() => navigation.goBack()} />\r\n            <Text style={styles.headerText}>알림</Text>\r\n          </View>\r\n        </View>\r\n        {data.map((notice) => (\r\n          <NoticesPerDay key={notice.date} {...notice} />\r\n        ))}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nexport default NoticeScreen;\r\n"]},"metadata":{},"sourceType":"module"}