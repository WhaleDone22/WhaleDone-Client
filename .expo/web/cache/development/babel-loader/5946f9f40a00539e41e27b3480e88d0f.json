{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useRef, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { ScrollView, TextInput } from 'react-native-gesture-handler';\nimport BottomSheet from 'react-native-gesture-bottom-sheet';\nimport ButtonBack from \"../../components/ButtonBack\";\nimport ButtonNext from \"../../components/ButtonNext\";\nimport COLORS from \"../../styles/colors\";\nimport { commonStyles } from \"../../styles/common\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar countryCodeWithEmoji = require(\"../../../infrastructures/data/countryCodeWithEmoji.json\");\n\nvar countryCodeWithTelNumber = require(\"../../../infrastructures/data/countryCodeWithTelNumber.json\");\n\nvar icToggleDown = require(\"../../../assets/ic-toggle-down.png\");\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height;\n\nvar styles = StyleSheet.create({\n  countryInfoContainer: {\n    position: 'absolute',\n    alignItems: 'center',\n    flexDirection: 'row',\n    height: 60,\n    width: 99,\n    left: 16,\n    top: 0,\n    zIndex: 100\n  },\n  countryCodeText: {\n    fontFamily: 'Pretendard-Bold',\n    fontSize: 16,\n    marginStart: 5\n  },\n  countryCodeSelectorContainer: {\n    flex: 1,\n    alignItems: 'center',\n    flexDirection: 'row',\n    zIndex: 2\n  },\n  countryFlagText: {\n    fontSize: Platform.OS === 'ios' ? 24 : 18\n  },\n  textInput: {\n    paddingStart: 116,\n    paddingEnd: 16,\n    paddingVertical: 18,\n    borderRadius: 5,\n    backgroundColor: COLORS.GREY_030,\n    marginBottom: 12,\n    height: 60,\n    fontSize: 16,\n    borderColor: 'transparent'\n  },\n  countryCodeSelectorTitleText: {\n    marginTop: 66,\n    marginStart: 26,\n    marginBottom: 40,\n    fontFamily: 'Pretendard-Bold',\n    fontSize: 20\n  },\n  countryCodeSelectorWrapper: {\n    flex: 1,\n    flexDirection: 'row',\n    paddingHorizontal: 26,\n    paddingVertical: 20,\n    alignItems: 'center'\n  },\n  countryCodeCountryNameText: {\n    fontFamily: 'Pretendard-Bold',\n    fontSize: 16\n  },\n  countryCodeCountryCodeText: {\n    fontFamily: 'Pretendard',\n    marginStart: 5\n  }\n});\n\nfunction PhoneInputScreen(_ref) {\n  var _countryCodeWithTelNu, _countryCodeWithTelNu2;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState('KR'),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedCountry = _useState2[0],\n      setSelectedCountry = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      phone = _useState4[0],\n      setPhone = _useState4[1];\n\n  var bottomSheetRef = useRef(null);\n  return _jsxs(SafeAreaView, {\n    style: commonStyles.container,\n    children: [_jsx(BottomSheet, {\n      ref: bottomSheetRef,\n      snapPoints: [700],\n      height: height - 93,\n      children: _jsxs(ScrollView, {\n        children: [_jsx(Text, {\n          style: styles.countryCodeSelectorTitleText,\n          children: \"\\uAD6D\\uAC00 \\uCF54\\uB4DC\"\n        }), countryCodeWithTelNumber.map(function (country) {\n          return _jsxs(TouchableOpacity, {\n            onPress: function onPress() {\n              var _bottomSheetRef$curre;\n\n              setSelectedCountry(country.countryCode);\n              (_bottomSheetRef$curre = bottomSheetRef.current) == null ? void 0 : _bottomSheetRef$curre.close();\n            },\n            style: styles.countryCodeSelectorWrapper,\n            children: [_jsx(Text, {\n              style: styles.countryCodeCountryNameText,\n              children: country.countryNameKR\n            }), _jsxs(Text, {\n              style: styles.countryCodeCountryCodeText,\n              children: [\"+\", country.countryPhoneNumber]\n            })]\n          }, country.countryCode);\n        })]\n      })\n    }), _jsx(ButtonBack, {\n      onPress: function onPress() {\n        return navigation.goBack();\n      }\n    }), _jsx(View, {\n      style: commonStyles.titleWrapper,\n      children: _jsx(Text, {\n        style: _objectSpread(_objectSpread({}, commonStyles.title), {}, {\n          marginBottom: 12\n        }),\n        children: \"\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"\n      })\n    }), _jsxs(View, {\n      children: [_jsxs(TouchableOpacity, {\n        style: styles.countryInfoContainer,\n        onPress: function onPress() {\n          var _bottomSheetRef$curre2;\n\n          return (_bottomSheetRef$curre2 = bottomSheetRef.current) == null ? void 0 : _bottomSheetRef$curre2.show();\n        },\n        children: [_jsx(Text, {\n          style: styles.countryFlagText,\n          children: countryCodeWithEmoji[selectedCountry]\n        }), _jsxs(Text, {\n          style: styles.countryCodeText,\n          children: [\"+\", (_countryCodeWithTelNu = (_countryCodeWithTelNu2 = countryCodeWithTelNumber.find(function (country) {\n            return country.countryCode === selectedCountry;\n          })) == null ? void 0 : _countryCodeWithTelNu2.countryPhoneNumber) != null ? _countryCodeWithTelNu : '']\n        }), _jsx(Image, {\n          source: icToggleDown,\n          style: {\n            width: 24,\n            height: 24\n          }\n        })]\n      }), _jsx(TextInput, {\n        value: phone,\n        onChangeText: function onChangeText(text) {\n          return setPhone(text);\n        },\n        style: styles.textInput,\n        placeholder: \"010-0000-0000\",\n        placeholderTextColor: COLORS.TEXT_DISABLED_GREY,\n        keyboardType: \"number-pad\"\n      })]\n    }), _jsx(View, {\n      style: {\n        marginTop: 22\n      },\n      children: _jsx(ButtonNext, {\n        onPress: function onPress() {\n          return navigation.navigate('PhoneAuth');\n        },\n        isActivated: phone !== '' && selectedCountry !== null\n      })\n    })]\n  });\n}\n\nexport default PhoneInputScreen;","map":{"version":3,"sources":["C:/Users/lnr99/Documents/WhaleDone-Client/presentation/screens/Signup/PhoneInput.tsx"],"names":["React","useRef","useState","SafeAreaView","ScrollView","TextInput","BottomSheet","ButtonBack","ButtonNext","COLORS","commonStyles","countryCodeWithEmoji","require","countryCodeWithTelNumber","icToggleDown","Dimensions","get","height","styles","StyleSheet","create","countryInfoContainer","position","alignItems","flexDirection","width","left","top","zIndex","countryCodeText","fontFamily","fontSize","marginStart","countryCodeSelectorContainer","flex","countryFlagText","Platform","OS","textInput","paddingStart","paddingEnd","paddingVertical","borderRadius","backgroundColor","GREY_030","marginBottom","borderColor","countryCodeSelectorTitleText","marginTop","countryCodeSelectorWrapper","paddingHorizontal","countryCodeCountryNameText","countryCodeCountryCodeText","PhoneInputScreen","navigation","selectedCountry","setSelectedCountry","phone","setPhone","bottomSheetRef","container","map","country","countryCode","current","close","countryNameKR","countryPhoneNumber","goBack","titleWrapper","title","show","find","text","TEXT_DISABLED_GREY","navigate"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { NativeStackScreenProps } from '@react-navigation/native-stack';\nimport {\n  Text,\n  StyleSheet,\n  View,\n  Image,\n  Dimensions,\n  TouchableOpacity,\n  Platform,\n} from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { ScrollView, TextInput } from 'react-native-gesture-handler';\nimport BottomSheet from 'react-native-gesture-bottom-sheet';\nimport ButtonBack from '../../components/ButtonBack';\nimport { NavigationStackParams } from '../../../infrastructures/types/NavigationStackParams';\nimport ButtonNext from '../../components/ButtonNext';\nimport COLORS from '../../styles/colors';\nimport { Country } from '../../../infrastructures/types/country';\nimport { commonStyles } from '../../styles/common';\n\ntype PhoneInputScreenProp = NativeStackScreenProps<\n  NavigationStackParams,\n  'PhoneInput'\n>;\n\nconst countryCodeWithEmoji = require('../../../infrastructures/data/countryCodeWithEmoji.json');\nconst countryCodeWithTelNumber: Country[] = require('../../../infrastructures/data/countryCodeWithTelNumber.json');\nconst icToggleDown = require('../../../assets/ic-toggle-down.png');\n\nconst { height } = Dimensions.get('window');\n\nconst styles = StyleSheet.create({\n  countryInfoContainer: {\n    position: 'absolute',\n    alignItems: 'center',\n    flexDirection: 'row',\n    height: 60,\n    width: 99,\n    left: 16,\n    top: 0,\n    zIndex: 100,\n  },\n  countryCodeText: {\n    fontFamily: 'Pretendard-Bold',\n    fontSize: 16,\n    marginStart: 5,\n  },\n  countryCodeSelectorContainer: {\n    flex: 1,\n    alignItems: 'center',\n    flexDirection: 'row',\n    zIndex: 2,\n  },\n  countryFlagText: {\n    fontSize: Platform.OS === 'ios' ? 24 : 18,\n  },\n  textInput: {\n    paddingStart: 116,\n    paddingEnd: 16,\n    paddingVertical: 18,\n    borderRadius: 5,\n    backgroundColor: COLORS.GREY_030,\n    marginBottom: 12,\n    height: 60,\n    fontSize: 16,\n    borderColor: 'transparent',\n  },\n  countryCodeSelectorTitleText: {\n    marginTop: 66,\n    marginStart: 26,\n    marginBottom: 40,\n    fontFamily: 'Pretendard-Bold',\n    fontSize: 20,\n  },\n  countryCodeSelectorWrapper: {\n    flex: 1,\n    flexDirection: 'row',\n    paddingHorizontal: 26,\n    paddingVertical: 20,\n    alignItems: 'center',\n  },\n  countryCodeCountryNameText: {\n    fontFamily: 'Pretendard-Bold',\n    fontSize: 16,\n  },\n  countryCodeCountryCodeText: {\n    fontFamily: 'Pretendard',\n    marginStart: 5,\n  },\n});\n\nfunction PhoneInputScreen({ navigation }: PhoneInputScreenProp) {\n  const [selectedCountry, setSelectedCountry] = useState('KR');\n  const [phone, setPhone] = useState('');\n  const bottomSheetRef = useRef<any>(null);\n\n  return (\n    <SafeAreaView style={commonStyles.container}>\n      <BottomSheet ref={bottomSheetRef} snapPoints={[700]} height={height - 93}>\n        <ScrollView>\n          <Text style={styles.countryCodeSelectorTitleText}>국가 코드</Text>\n          {countryCodeWithTelNumber.map((country) => (\n            <TouchableOpacity\n              onPress={() => {\n                setSelectedCountry(country.countryCode);\n                bottomSheetRef.current?.close();\n              }}\n              key={country.countryCode}\n              style={styles.countryCodeSelectorWrapper}\n            >\n              <Text style={styles.countryCodeCountryNameText}>\n                {country.countryNameKR}\n              </Text>\n              <Text style={styles.countryCodeCountryCodeText}>\n                +{country.countryPhoneNumber}\n              </Text>\n            </TouchableOpacity>\n          ))}\n        </ScrollView>\n      </BottomSheet>\n      <ButtonBack onPress={() => navigation.goBack()} />\n      <View style={commonStyles.titleWrapper}>\n        <Text style={{ ...commonStyles.title, marginBottom: 12 }}>\n          번호를 입력하세요\n        </Text>\n      </View>\n      <View>\n        <TouchableOpacity\n          style={styles.countryInfoContainer}\n          onPress={() => bottomSheetRef.current?.show()}\n        >\n          <Text style={styles.countryFlagText}>\n            {countryCodeWithEmoji[selectedCountry]}\n          </Text>\n          <Text style={styles.countryCodeText}>\n            +\n            {countryCodeWithTelNumber.find(\n              (country: Country) => country.countryCode === selectedCountry,\n            )?.countryPhoneNumber ?? ''}\n          </Text>\n          <Image source={icToggleDown} style={{ width: 24, height: 24 }} />\n        </TouchableOpacity>\n        <TextInput\n          value={phone}\n          onChangeText={(text) => setPhone(text)}\n          style={styles.textInput}\n          placeholder=\"010-0000-0000\"\n          placeholderTextColor={COLORS.TEXT_DISABLED_GREY}\n          keyboardType=\"number-pad\"\n        />\n      </View>\n      <View style={{ marginTop: 22 }}>\n        <ButtonNext\n          onPress={() => navigation.navigate('PhoneAuth')}\n          isActivated={phone !== '' && selectedCountry !== null}\n        />\n      </View>\n    </SafeAreaView>\n  );\n}\n\nexport default PhoneInputScreen;\n"]},"metadata":{},"sourceType":"module"}