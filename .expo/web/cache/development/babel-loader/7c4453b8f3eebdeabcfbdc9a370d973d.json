{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport COLORS from \"../styles/colors\";\nimport NoticeItem from \"./NoticeItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar IcMoveUp = require(\"../../assets/ic-move-up.png\");\n\nvar IcMoveDown = require(\"../../assets/ic-move-down.png\");\n\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 42\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  headerText: {\n    fontSize: 16,\n    fontFamily: 'Pretendard-Bold',\n    color: COLORS.TEXT_PRIMARY\n  },\n  icon: {\n    height: 24,\n    width: 24\n  }\n});\n\nfunction NoticesPerDay(props) {\n  var date = props.date,\n      notices = props.notices;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isWrapped = _useState2[0],\n      setIsWrapped = _useState2[1];\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.headerText,\n        children: date\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return setIsWrapped(function (prev) {\n            return !prev;\n          });\n        },\n        children: _jsx(Image, {\n          source: isWrapped ? IcMoveDown : IcMoveUp,\n          style: styles.icon\n        })\n      })]\n    }), !isWrapped && notices.map(function (notice) {\n      return _jsx(NoticeItem, _objectSpread({}, notice), notice.id);\n    })]\n  });\n}\n\nexport default NoticesPerDay;","map":{"version":3,"sources":["C:/Users/lnr99/Documents/WhaleDone-Client/presentation/components/NoticesPerDay.tsx"],"names":["React","useState","TouchableOpacity","COLORS","NoticeItem","IcMoveUp","require","IcMoveDown","styles","StyleSheet","create","container","marginTop","header","flexDirection","justifyContent","alignItems","marginBottom","headerText","fontSize","fontFamily","color","TEXT_PRIMARY","icon","height","width","NoticesPerDay","props","date","notices","isWrapped","setIsWrapped","prev","map","notice","id"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,SAASC,gBAAT,QAAiC,8BAAjC;AAEA,OAAOC,MAAP;AACA,OAAOC,UAAP;;;;AAOA,IAAMC,QAAQ,GAAGC,OAAO,+BAAxB;;AACA,IAAMC,UAAU,GAAGD,OAAO,iCAA1B;;AAEA,IAAME,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE;AADF,GADoB;AAI/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,aAAa,EAAE,KADT;AAENC,IAAAA,cAAc,EAAE,eAFV;AAGNC,IAAAA,UAAU,EAAE,QAHN;AAINC,IAAAA,YAAY,EAAE;AAJR,GAJuB;AAU/BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,QAAQ,EAAE,EADA;AAEVC,IAAAA,UAAU,EAAE,iBAFF;AAGVC,IAAAA,KAAK,EAAElB,MAAM,CAACmB;AAHJ,GAVmB;AAe/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,EADJ;AAEJC,IAAAA,KAAK,EAAE;AAFH;AAfyB,CAAlB,CAAf;;AAqBA,SAASC,aAAT,CAAuBC,KAAvB,EAAkD;AAChD,MAAQC,IAAR,GAA0BD,KAA1B,CAAQC,IAAR;AAAA,MAAcC,OAAd,GAA0BF,KAA1B,CAAcE,OAAd;;AACA,kBAAkC5B,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAO6B,SAAP;AAAA,MAAkBC,YAAlB;;AACA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEvB,MAAM,CAACG,SAApB;AAAA,eACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEH,MAAM,CAACK,MAApB;AAAA,iBACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEL,MAAM,CAACU,UAApB;AAAA,kBAAiCU;AAAjC,QADF,EAEE,KAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE;AAAA,iBAAMG,YAAY,CAAC,UAACC,IAAD;AAAA,mBAAU,CAACA,IAAX;AAAA,WAAD,CAAlB;AAAA,SAA3B;AAAA,kBACE,KAAC,KAAD;AACE,UAAA,MAAM,EAAEF,SAAS,GAAGvB,UAAH,GAAgBF,QADnC;AAEE,UAAA,KAAK,EAAEG,MAAM,CAACe;AAFhB;AADF,QAFF;AAAA,MADF,EAUG,CAACO,SAAD,IACCD,OAAO,CAACI,GAAR,CAAY,UAACC,MAAD;AAAA,aAAY,KAAC,UAAD,oBAAgCA,MAAhC,GAAiBA,MAAM,CAACC,EAAxB,CAAZ;AAAA,KAAZ,CAXJ;AAAA,IADF;AAeD;;AAED,eAAeT,aAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, Image, StyleSheet } from 'react-native';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport { Notice } from '../../infrastructures/types/notice';\r\nimport COLORS from '../styles/colors';\r\nimport NoticeItem from './NoticeItem';\r\n\r\ntype NoticesPerDayProps = {\r\n  date: string;\r\n  notices: Notice[];\r\n};\r\n\r\nconst IcMoveUp = require('../../assets/ic-move-up.png');\r\nconst IcMoveDown = require('../../assets/ic-move-down.png');\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginTop: 42,\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  headerText: {\r\n    fontSize: 16,\r\n    fontFamily: 'Pretendard-Bold',\r\n    color: COLORS.TEXT_PRIMARY,\r\n  },\r\n  icon: {\r\n    height: 24,\r\n    width: 24,\r\n  },\r\n});\r\n\r\nfunction NoticesPerDay(props: NoticesPerDayProps) {\r\n  const { date, notices } = props;\r\n  const [isWrapped, setIsWrapped] = useState(false);\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerText}>{date}</Text>\r\n        <TouchableOpacity onPress={() => setIsWrapped((prev) => !prev)}>\r\n          <Image\r\n            source={isWrapped ? IcMoveDown : IcMoveUp}\r\n            style={styles.icon}\r\n          />\r\n        </TouchableOpacity>\r\n      </View>\r\n      {!isWrapped &&\r\n        notices.map((notice) => <NoticeItem key={notice.id} {...notice} />)}\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default NoticesPerDay;\r\n"]},"metadata":{},"sourceType":"module"}