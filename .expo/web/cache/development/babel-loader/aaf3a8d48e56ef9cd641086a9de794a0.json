{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport ButtonBack from \"../../components/ButtonBack\";\nimport COLORS from \"../../styles/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction GroupCodeShareScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(48),\n      _useState2 = _slicedToArray(_useState, 2),\n      hours = _useState2[0],\n      setHours = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      minutes = _useState4[0],\n      setMinutes = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      seconds = _useState6[0],\n      setSeconds = _useState6[1];\n\n  var resetTime = function resetTime() {\n    setHours(48);\n    setSeconds(0);\n    setMinutes(0);\n  };\n\n  useEffect(function () {\n    var countdown = setInterval(function () {\n      if (seconds > 0) {\n        setSeconds(seconds - 1);\n      }\n\n      if (seconds === 0) {\n        if (minutes === 0) {\n          if (hours === 0) {\n            clearInterval(countdown);\n          } else {\n            setHours(hours - 1);\n            setMinutes(59);\n            setSeconds(59);\n          }\n        } else {\n          setMinutes(minutes - 1);\n          setSeconds(59);\n        }\n      }\n    }, 1000);\n    return function () {\n      return clearInterval(countdown);\n    };\n  }, [hours, minutes, seconds]);\n  var code = route.params.code;\n\n  var onSharePressed = function onSharePressed() {\n    try {\n      Share.share({\n        message: \"\\uCD08\\uB300 \\uCF54\\uB4DC\\uB294 \" + code + \"\\uC785\\uB2C8\\uB2E4.\"\n      });\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: styles.safeAreaContainer,\n    children: [_jsx(ButtonBack, {\n      onPress: function onPress() {\n        navigation.goBack();\n      }\n    }), _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        children: [_jsxs(View, {\n          style: styles.titleWrapper,\n          children: [_jsx(Text, {\n            style: styles.title,\n            children: \"\\uCD08\\uB300 \\uCF54\\uB4DC\\uB97C\"\n          }), _jsx(Text, {\n            style: styles.title,\n            children: \"\\uAC00\\uC871\\uACFC \\uACF5\\uC720\\uD574\\uBCFC\\uAE4C\\uC694?\"\n          })]\n        }), _jsxs(View, {\n          style: styles.codeContainer,\n          children: [_jsx(Text, {\n            style: styles.textCode,\n            children: code\n          }), _jsx(Text, {\n            style: styles.textCodeDescription,\n            children: \"\\uCD08\\uB300 \\uCF54\\uB4DC\\uB294 48\\uC2DC\\uAC04 \\uB4A4 \\uC0AC\\uB77C\\uC838\\uC694\"\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.resendContainer,\n        children: [_jsxs(Text, {\n          style: styles.resendTimerText,\n          children: [hours, \":\", minutes.toString().padStart(2, '0'), \":\", seconds.toString().padStart(2, '0')]\n        }), _jsx(Text, {\n          onPress: resetTime,\n          style: styles.resendButton,\n          children: \"\\uC7AC\\uBC1C\\uAE09\"\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(TouchableOpacity, {\n          style: styles.btnShare,\n          onPress: onSharePressed,\n          children: _jsx(Text, {\n            style: styles.btnShareTxt,\n            children: \"\\uCD08\\uB300 \\uCF54\\uB4DC \\uACF5\\uC720\\uD558\\uAE30\"\n          })\n        }), _jsx(Text, {\n          style: styles.shareCompleteTxt,\n          onPress: function onPress() {\n            return navigation.navigate('Home');\n          },\n          children: \"\\uCD08\\uB300 \\uCF54\\uB4DC \\uACF5\\uC720 \\uC644\\uB8CC\"\n        })]\n      })]\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'space-between'\n  },\n  safeAreaContainer: {\n    flex: 1,\n    backgroundColor: '#fff',\n    paddingHorizontal: 16,\n    paddingTop: 12\n  },\n  title: {\n    fontSize: 20,\n    fontFamily: 'Pretendard-Bold',\n    lineHeight: 34\n  },\n  titleWrapper: {\n    paddingVertical: 20,\n    paddingHorizontal: 10\n  },\n  codeContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#446CFF',\n    paddingVertical: 28,\n    borderRadius: 10\n  },\n  textCode: {\n    color: 'white',\n    fontWeight: '600',\n    fontSize: 32,\n    letterSpacing: 9\n  },\n  textCodeDescription: {\n    color: 'white',\n    fontSize: 14,\n    marginTop: 12\n  },\n  btnShare: {\n    textAlign: 'center',\n    backgroundColor: '#446CFF',\n    paddingVertical: 17,\n    color: 'white',\n    borderRadius: 5\n  },\n  btnShareTxt: {\n    color: 'white',\n    textAlign: 'center',\n    fontFamily: 'Pretendard-Bold',\n    fontSize: 16,\n    fontWeight: '600'\n  },\n  shareCompleteTxt: {\n    fontFamily: 'Pretendard',\n    fontSize: 12,\n    textAlign: 'center',\n    paddingVertical: 20,\n    color: COLORS.TEXT_SECONDARY\n  },\n  resendContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 17\n  },\n  resendTimerText: {\n    fontFamily: 'Inter_700Bold',\n    color: COLORS.TEXT_SECONDARY,\n    marginRight: 5\n  },\n  resendButton: {\n    color: COLORS.TEXT_SECONDARY,\n    borderBottomColor: COLORS.TEXT_SECONDARY,\n    borderBottomWidth: 1\n  }\n});\nexport default GroupCodeShareScreen;","map":{"version":3,"sources":["C:/Users/lnr99/Documents/WhaleDone-Client/presentation/screens/Signup/GroupCodeShare.tsx"],"names":["React","useState","useEffect","SafeAreaView","ButtonBack","COLORS","GroupCodeShareScreen","navigation","route","hours","setHours","minutes","setMinutes","seconds","setSeconds","resetTime","countdown","setInterval","clearInterval","code","params","onSharePressed","Share","share","message","error","alert","styles","safeAreaContainer","goBack","container","titleWrapper","title","codeContainer","textCode","textCodeDescription","resendContainer","resendTimerText","toString","padStart","resendButton","btnShare","btnShareTxt","shareCompleteTxt","navigate","StyleSheet","create","flex","justifyContent","backgroundColor","paddingHorizontal","paddingTop","fontSize","fontFamily","lineHeight","paddingVertical","alignItems","borderRadius","color","fontWeight","letterSpacing","marginTop","textAlign","TEXT_SECONDARY","flexDirection","marginRight","borderBottomColor","borderBottomWidth"],"mappings":"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","sourcesContent":["import { NativeStackScreenProps } from '@react-navigation/native-stack';\nimport React, { useState, useEffect } from 'react';\nimport { Text, StyleSheet, Share, TouchableOpacity, View } from 'react-native';\nimport { SafeAreaView, SafeAreaProvider } from 'react-native-safe-area-context';\nimport { NavigationStackParams } from '../../../infrastructures/types/NavigationStackParams';\nimport ButtonBack from '../../components/ButtonBack';\nimport COLORS from '../../styles/colors';\n\ntype GroupCodeShareScreenProp = NativeStackScreenProps<\n  NavigationStackParams,\n  'GroupCodeShare'\n>;\n\nfunction GroupCodeShareScreen({ navigation, route }: GroupCodeShareScreenProp) {\n  const [hours, setHours] = useState(48);\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n\n  const resetTime = () => {\n    setHours(48);\n    setSeconds(0);\n    setMinutes(0);\n  };\n\n  useEffect(() => {\n    const countdown = setInterval(() => {\n      if (seconds > 0) {\n        setSeconds(seconds - 1);\n      }\n      if (seconds === 0) {\n        if (minutes === 0) {\n          if (hours === 0) {\n            clearInterval(countdown);\n          } else {\n            setHours(hours - 1);\n            setMinutes(59);\n            setSeconds(59);\n          }\n        } else {\n            setMinutes(minutes - 1);\n            setSeconds(59);\n          }\n      } \n    }, 1000);\n    return () => clearInterval(countdown);\n  }, [hours, minutes, seconds]);\n\n  const { code } = route.params;\n  const onSharePressed = () => {\n    try {\n      Share.share({\n        message: `초대 코드는 ${code}입니다.`,\n      });\n    } catch (error) {\n      alert(error);\n    }\n  };\n  return (\n    <SafeAreaView style={styles.safeAreaContainer}>\n      <ButtonBack\n        onPress={() => {\n          navigation.goBack();\n        }}\n      />\n      <View style={styles.container}>\n        <View>\n          <View style={styles.titleWrapper}>\n            <Text style={styles.title}>초대 코드를</Text>\n            <Text style={styles.title}>가족과 공유해볼까요?</Text>\n          </View>\n          <View style={styles.codeContainer}>\n            <Text style={styles.textCode}>{code}</Text>\n            <Text style={styles.textCodeDescription}>\n              초대 코드는 48시간 뒤 사라져요\n            </Text>\n          </View>\n        </View>\n\n        <View style={styles.resendContainer}>\n          <Text style={styles.resendTimerText}>\n            {hours}:{minutes.toString().padStart(2, '0')}:{seconds.toString().padStart(2, '0')}\n          </Text>\n          <Text onPress={resetTime} style={styles.resendButton}>\n            재발급\n          </Text>\n        </View>\n\n        <View>\n          <TouchableOpacity style={styles.btnShare} onPress={onSharePressed}>\n            <Text style={styles.btnShareTxt}>초대 코드 공유하기</Text>\n          </TouchableOpacity>\n          <Text\n            style={styles.shareCompleteTxt}\n            onPress={() => navigation.navigate('Home')}\n          >\n            초대 코드 공유 완료\n          </Text>\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'space-between',\n    \n  },\n  safeAreaContainer: {\n    flex: 1,\n    backgroundColor: '#fff',\n    paddingHorizontal: 16,\n    paddingTop: 12,\n  },\n  title: {\n    fontSize: 20,\n    fontFamily: 'Pretendard-Bold',\n    lineHeight: 34,\n  },\n  titleWrapper: {\n    paddingVertical: 20,\n    paddingHorizontal: 10,\n  },\n  codeContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#446CFF',\n    paddingVertical: 28,\n    borderRadius: 10,\n  },\n  textCode: {\n    color: 'white',\n    fontWeight: '600',\n    fontSize: 32,\n    letterSpacing: 9,\n  },\n  textCodeDescription: {\n    color: 'white',\n    fontSize: 14,\n    marginTop: 12,\n  },\n\n  btnShare: {\n    textAlign: 'center',\n    backgroundColor: '#446CFF',\n    paddingVertical: 17,\n    color: 'white',\n    borderRadius: 5,\n  },\n  btnShareTxt: {\n    color: 'white',\n    textAlign: 'center',\n    fontFamily: 'Pretendard-Bold',\n    fontSize: 16,\n    fontWeight: '600',\n    // backgroundColor: 'red',\n  },\n\n  shareCompleteTxt: {\n    fontFamily: 'Pretendard',\n    fontSize: 12,\n    textAlign: 'center',\n    paddingVertical: 20,\n    color: COLORS.TEXT_SECONDARY,\n  },\n\n  //resend\n  resendContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 17,\n  },\n  resendTimerText: {\n    fontFamily: 'Inter_700Bold',\n    color: COLORS.TEXT_SECONDARY,\n    marginRight: 5,\n  },\n  resendButton: {\n    color: COLORS.TEXT_SECONDARY,\n    borderBottomColor: COLORS.TEXT_SECONDARY,\n    borderBottomWidth: 1,\n  },\n});\n\nexport default GroupCodeShareScreen;\n"]},"metadata":{},"sourceType":"module"}