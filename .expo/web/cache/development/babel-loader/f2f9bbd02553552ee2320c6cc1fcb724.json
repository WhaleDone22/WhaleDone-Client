{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport ButtonBack from \"../../components/ButtonBack\";\nimport COLORS from \"../../styles/colors\";\nimport ButtonNext from \"../../components/ButtonNext\";\nimport { commonStyles } from \"../../styles/common\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  textInput: {\n    borderRadius: 5,\n    backgroundColor: COLORS.GREY_030,\n    fontSize: 16,\n    height: 54,\n    width: '16%',\n    textAlign: 'center'\n  },\n  hintText: {\n    color: COLORS.THEME_PRIMARY,\n    fontFamily: 'Pretendard',\n    fontSize: 12,\n    paddingLeft: 12\n  },\n  textInputWrapper: {\n    marginVertical: 12,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginHorizontal: 5\n  },\n  resendContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 17\n  },\n  resendTimerText: {\n    fontFamily: 'Inter_700Bold',\n    color: COLORS.TEXT_SECONDARY,\n    marginRight: 5\n  },\n  resendButton: {\n    color: COLORS.TEXT_SECONDARY,\n    borderBottomColor: COLORS.TEXT_SECONDARY,\n    borderBottomWidth: 1\n  }\n});\n\nfunction PhoneAuthScreen(_ref) {\n  var navigation = _ref.navigation;\n  var inputRef1 = useRef(null);\n  var inputRef2 = useRef(null);\n  var inputRef3 = useRef(null);\n  var inputRef4 = useRef(null);\n  var inputRef5 = useRef(null);\n\n  var _useState = useState(['', '', '', '', '']),\n      _useState2 = _slicedToArray(_useState, 2),\n      filledTexts = _useState2[0],\n      setFilledTexts = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isValidate = _useState4[0],\n      setIsValidate = _useState4[1];\n\n  var _useState5 = useState(3),\n      _useState6 = _slicedToArray(_useState5, 2),\n      minutes = _useState6[0],\n      setMinutes = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      seconds = _useState8[0],\n      setSeconds = _useState8[1];\n\n  var resetTime = function resetTime() {\n    setSeconds(0);\n    e;\n    setMinutes(3);\n  };\n\n  useEffect(function () {\n    var countdown = setInterval(function () {\n      if (seconds > 0) {\n        setSeconds(seconds - 1);\n      }\n\n      if (seconds === 0) {\n        if (minutes === 0) {\n          clearInterval(countdown);\n        } else {\n          setMinutes(minutes - 1);\n          setSeconds(59);\n        }\n      }\n    }, 1000);\n    return function () {\n      return clearInterval(countdown);\n    };\n  }, [minutes, seconds]);\n  useEffect(function () {\n    var answerText = 'ABCDE';\n    setIsValidate(answerText === filledTexts.join(''));\n  }, [filledTexts]);\n\n  var insertText = function insertText(text, index) {\n    setFilledTexts(function (prev) {\n      var newFilledTexts = _toConsumableArray(prev);\n\n      newFilledTexts[index] = text;\n      return newFilledTexts;\n    });\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: commonStyles.container,\n    children: [_jsx(ButtonBack, {\n      onPress: function onPress() {\n        return navigation.goBack();\n      }\n    }), _jsx(View, {\n      style: commonStyles.titleWrapper,\n      children: _jsx(Text, {\n        style: commonStyles.title,\n        children: \"\\uC778\\uC99D \\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"\n      })\n    }), _jsxs(View, {\n      style: styles.textInputWrapper,\n      children: [_jsx(TextInput, {\n        style: styles.textInput,\n        maxLength: 1,\n        autoFocus: true,\n        ref: inputRef1,\n        onChangeText: function onChangeText(text) {\n          var _inputRef1$current, _inputRef2$current;\n\n          insertText(text, 0);\n          if (text === '') (_inputRef1$current = inputRef1.current) == null ? void 0 : _inputRef1$current.blur();else (_inputRef2$current = inputRef2.current) == null ? void 0 : _inputRef2$current.focus();\n        }\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        maxLength: 1,\n        ref: inputRef2,\n        onChangeText: function onChangeText(text) {\n          var _inputRef1$current2, _inputRef3$current;\n\n          insertText(text, 1);\n          if (text === '') (_inputRef1$current2 = inputRef1.current) == null ? void 0 : _inputRef1$current2.focus();else (_inputRef3$current = inputRef3.current) == null ? void 0 : _inputRef3$current.focus();\n        }\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        maxLength: 1,\n        ref: inputRef3,\n        onChangeText: function onChangeText(text) {\n          var _inputRef2$current2, _inputRef4$current;\n\n          insertText(text, 2);\n          if (text === '') (_inputRef2$current2 = inputRef2.current) == null ? void 0 : _inputRef2$current2.focus();else (_inputRef4$current = inputRef4.current) == null ? void 0 : _inputRef4$current.focus();\n        }\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        maxLength: 1,\n        ref: inputRef4,\n        onChangeText: function onChangeText(text) {\n          var _inputRef3$current2, _inputRef5$current;\n\n          insertText(text, 3);\n          if (text === '') (_inputRef3$current2 = inputRef3.current) == null ? void 0 : _inputRef3$current2.focus();else (_inputRef5$current = inputRef5.current) == null ? void 0 : _inputRef5$current.focus();\n        }\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        maxLength: 1,\n        ref: inputRef5,\n        onChangeText: function onChangeText(text) {\n          var _inputRef4$current2, _inputRef5$current2;\n\n          insertText(text, 4);\n          if (text === '') (_inputRef4$current2 = inputRef4.current) == null ? void 0 : _inputRef4$current2.focus();else (_inputRef5$current2 = inputRef5.current) == null ? void 0 : _inputRef5$current2.blur();\n        }\n      })]\n    }), _jsx(Text, {\n      style: styles.hintText,\n      children: \"\\uC804\\uC1A1\\uB41C \\uC778\\uC99D\\uBC88\\uD638\\uB294 3\\uBD84 \\uC548\\uC5D0 \\uC778\\uC99D\\uC774 \\uB9CC\\uB8CC\\uB429\\uB2C8\\uB2E4.\"\n    }), _jsx(View, {\n      style: {\n        marginTop: 22\n      },\n      children: _jsx(ButtonNext, {\n        onPress: function onPress() {\n          return navigation.navigate('EmailInput');\n        },\n        isActivated: isValidate\n      })\n    }), _jsxs(View, {\n      style: styles.resendContainer,\n      children: [_jsxs(Text, {\n        style: styles.resendTimerText,\n        children: [minutes, \":\", seconds.toString().padStart(2, '0')]\n      }), _jsx(Text, {\n        onPress: resetTime,\n        style: styles.resendButton,\n        children: \"\\uC7AC\\uC804\\uC1A1\"\n      })]\n    })]\n  });\n}\n\nexport default PhoneAuthScreen;","map":{"version":3,"sources":["C:/Users/lnr99/Documents/WhaleDone-Client/presentation/screens/Signup/PhoneAuth.tsx"],"names":["React","useEffect","useRef","useState","SafeAreaView","ButtonBack","COLORS","ButtonNext","commonStyles","styles","StyleSheet","create","textInput","borderRadius","backgroundColor","GREY_030","fontSize","height","width","textAlign","hintText","color","THEME_PRIMARY","fontFamily","paddingLeft","textInputWrapper","marginVertical","flexDirection","justifyContent","marginHorizontal","resendContainer","alignItems","marginTop","resendTimerText","TEXT_SECONDARY","marginRight","resendButton","borderBottomColor","borderBottomWidth","PhoneAuthScreen","navigation","inputRef1","inputRef2","inputRef3","inputRef4","inputRef5","filledTexts","setFilledTexts","isValidate","setIsValidate","minutes","setMinutes","seconds","setSeconds","resetTime","e","countdown","setInterval","clearInterval","answerText","join","insertText","text","index","prev","newFilledTexts","container","goBack","titleWrapper","title","current","blur","focus","navigate","toString","padStart"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { NativeStackScreenProps } from '@react-navigation/native-stack';\nimport { StyleSheet, Text, View, TextInput } from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport ButtonBack from '../../components/ButtonBack';\nimport { NavigationStackParams } from '../../../infrastructures/types/NavigationStackParams';\nimport COLORS from '../../styles/colors';\nimport ButtonNext from '../../components/ButtonNext';\nimport { commonStyles } from '../../styles/common';\n\ntype PhoneAuthScreenProp = NativeStackScreenProps<\n  NavigationStackParams,\n  'PhoneAuth'\n>;\n\nconst styles = StyleSheet.create({\n  textInput: {\n    borderRadius: 5,\n    backgroundColor: COLORS.GREY_030,\n    fontSize: 16,\n    height: 54,\n    width: '16%',\n    textAlign: 'center',\n  },\n  hintText: {\n    color: COLORS.THEME_PRIMARY,\n    fontFamily: 'Pretendard',\n    fontSize: 12,\n    paddingLeft: 12,\n  },\n  textInputWrapper: {\n    marginVertical: 12,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginHorizontal: 5,\n  },\n  resendContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 17,\n  },\n  resendTimerText: {\n    fontFamily: 'Inter_700Bold',\n    color: COLORS.TEXT_SECONDARY,\n    marginRight: 5,\n  },\n  resendButton: {\n    color: COLORS.TEXT_SECONDARY,\n    borderBottomColor: COLORS.TEXT_SECONDARY,\n    borderBottomWidth: 1,\n  },\n});\n\nfunction PhoneAuthScreen({ navigation }: PhoneAuthScreenProp) {\n  const inputRef1 = useRef<TextInput | null>(null);\n  const inputRef2 = useRef<TextInput | null>(null);\n  const inputRef3 = useRef<TextInput | null>(null);\n  const inputRef4 = useRef<TextInput | null>(null);\n  const inputRef5 = useRef<TextInput | null>(null);\n  const [filledTexts, setFilledTexts] = useState<string[]>([\n    '',\n    '',\n    '',\n    '',\n    '',\n  ]);\n  const [isValidate, setIsValidate] = useState(false);\n  const [minutes, setMinutes] = useState(3);\n  const [seconds, setSeconds] = useState(0);\n  const resetTime = () => {\n    setSeconds(0);e\n    setMinutes(3);\n  };\n\n  useEffect(() => {\n    const countdown = setInterval(() => {\n      if (seconds > 0) {\n        setSeconds(seconds - 1);\n      }\n      if (seconds === 0) {\n        if (minutes === 0) {\n          clearInterval(countdown);\n        } else {\n          setMinutes(minutes - 1);\n          setSeconds(59);\n        }\n      }\n    }, 1000);\n    return () => clearInterval(countdown);\n  }, [minutes, seconds]);\n\n  useEffect(() => {\n    const answerText = 'ABCDE';\n    setIsValidate(answerText === filledTexts.join(''));\n  }, [filledTexts]);\n\n  const insertText = (text: string, index: number) => {\n    setFilledTexts((prev) => {\n      const newFilledTexts = [...prev];\n      newFilledTexts[index] = text;\n      return newFilledTexts;\n    });\n  };\n\n  return (\n    <SafeAreaView style={commonStyles.container}>\n      <ButtonBack onPress={() => navigation.goBack()} />\n      <View style={commonStyles.titleWrapper}>\n        <Text style={commonStyles.title}>인증 번호를 입력하세요</Text>\n      </View>\n      <View style={styles.textInputWrapper}>\n        <TextInput\n          style={styles.textInput}\n          maxLength={1}\n          autoFocus\n          ref={inputRef1}\n          onChangeText={(text) => {\n            insertText(text, 0);\n            if (text === '') inputRef1.current?.blur();\n            else inputRef2.current?.focus();\n          }}\n        />\n        <TextInput\n          style={styles.textInput}\n          maxLength={1}\n          ref={inputRef2}\n          onChangeText={(text) => {\n            insertText(text, 1);\n            if (text === '') inputRef1.current?.focus();\n            else inputRef3.current?.focus();\n          }}\n        />\n        <TextInput\n          style={styles.textInput}\n          maxLength={1}\n          ref={inputRef3}\n          onChangeText={(text) => {\n            insertText(text, 2);\n            if (text === '') inputRef2.current?.focus();\n            else inputRef4.current?.focus();\n          }}\n        />\n        <TextInput\n          style={styles.textInput}\n          maxLength={1}\n          ref={inputRef4}\n          onChangeText={(text) => {\n            insertText(text, 3);\n            if (text === '') inputRef3.current?.focus();\n            else inputRef5.current?.focus();\n          }}\n        />\n        <TextInput\n          style={styles.textInput}\n          maxLength={1}\n          ref={inputRef5}\n          onChangeText={(text) => {\n            insertText(text, 4);\n            if (text === '') inputRef4.current?.focus();\n            else inputRef5.current?.blur();\n          }}\n        />\n      </View>\n      <Text style={styles.hintText}>\n        전송된 인증번호는 3분 안에 인증이 만료됩니다.\n      </Text>\n      <View style={{ marginTop: 22 }}>\n        <ButtonNext\n          onPress={() => navigation.navigate('EmailInput')}\n          isActivated={isValidate}\n        />\n      </View>\n      <View style={styles.resendContainer}>\n        <Text style={styles.resendTimerText}>\n          {minutes}:{seconds.toString().padStart(2, '0')}\n        </Text>\n        <Text onPress={resetTime} style={styles.resendButton}>\n          재전송\n        </Text>\n      </View>\n    </SafeAreaView>\n  );\n}\n\nexport default PhoneAuthScreen;\n"]},"metadata":{},"sourceType":"module"}