{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport styles from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar BottomSheet = function (_Component) {\n  _inherits(BottomSheet, _Component);\n\n  var _super = _createSuper(BottomSheet);\n\n  function BottomSheet(props) {\n    var _this;\n\n    _classCallCheck(this, BottomSheet);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      modalVisible: false,\n      animatedHeight: new Animated.Value(0),\n      pan: new Animated.ValueXY()\n    };\n\n    _this.createPanResponder(props);\n\n    return _this;\n  }\n\n  _createClass(BottomSheet, [{\n    key: \"setModalVisible\",\n    value: function setModalVisible(visible) {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          closeFunction = _this$props.closeFunction,\n          height = _this$props.height;\n      var _this$state = this.state,\n          animatedHeight = _this$state.animatedHeight,\n          pan = _this$state.pan;\n\n      if (visible) {\n        this.setState({\n          modalVisible: visible\n        });\n        Animated.timing(animatedHeight, {\n          toValue: height,\n          duration: 300,\n          useNativeDriver: false\n        }).start();\n      } else {\n        Animated.timing(animatedHeight, {\n          toValue: 0,\n          duration: 400,\n          useNativeDriver: false\n        }).start(function () {\n          pan.setValue({\n            x: 0,\n            y: 0\n          });\n\n          _this2.setState({\n            modalVisible: visible,\n            animatedHeight: new Animated.Value(0)\n          });\n\n          if (typeof closeFunction === \"function\") closeFunction();\n        });\n      }\n    }\n  }, {\n    key: \"createPanResponder\",\n    value: function createPanResponder(props) {\n      var _this3 = this;\n\n      var height = props.height;\n      var pan = this.state.pan;\n      this.panResponder = PanResponder.create({\n        onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n          return true;\n        },\n        onPanResponderMove: function onPanResponderMove(e, gestureState) {\n          if (gestureState.dy > 0) {\n            Animated.event([null, {\n              dy: pan.y\n            }], {\n              useNativeDriver: false\n            })(e, gestureState);\n          }\n        },\n        onPanResponderRelease: function onPanResponderRelease(e, gestureState) {\n          var gestureLimitArea = height / 3;\n          var gestureDistance = gestureState.dy;\n\n          if (gestureDistance > gestureLimitArea) {\n            _this3.setModalVisible(false);\n          } else {\n            Animated.spring(pan, {\n              toValue: {\n                x: 0,\n                y: 0\n              },\n              useNativeDriver: false\n            }).start();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      this.setModalVisible(true);\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.setModalVisible(false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          hasDraggableIcon = _this$props2.hasDraggableIcon,\n          backgroundColor = _this$props2.backgroundColor,\n          sheetBackgroundColor = _this$props2.sheetBackgroundColor,\n          dragIconColor = _this$props2.dragIconColor,\n          dragIconStyle = _this$props2.dragIconStyle,\n          _this$props2$draggabl = _this$props2.draggable,\n          draggable = _this$props2$draggabl === void 0 ? true : _this$props2$draggabl,\n          onRequestClose = _this$props2.onRequestClose,\n          _this$props2$onClose = _this$props2.onClose,\n          onClose = _this$props2$onClose === void 0 ? function () {\n        return _this4.close();\n      } : _this$props2$onClose,\n          radius = _this$props2.radius;\n      var _this$state2 = this.state,\n          animatedHeight = _this$state2.animatedHeight,\n          pan = _this$state2.pan,\n          modalVisible = _this$state2.modalVisible;\n      var panStyle = {\n        transform: pan.getTranslateTransform()\n      };\n      return _jsx(Modal, {\n        transparent: true,\n        visible: modalVisible,\n        onRequestClose: onRequestClose,\n        children: _jsxs(View, {\n          style: [styles.wrapper, {\n            backgroundColor: backgroundColor || \"#25252599\"\n          }],\n          children: [_jsx(TouchableOpacity, {\n            style: styles.background,\n            activeOpacity: 1,\n            onPress: onClose\n          }), _jsxs(Animated.View, _objectSpread(_objectSpread({}, draggable && this.panResponder.panHandlers), {}, {\n            style: [panStyle, styles.container, {\n              height: animatedHeight,\n              borderTopRightRadius: radius || 10,\n              borderTopLeftRadius: radius || 10,\n              backgroundColor: sheetBackgroundColor || \"#F3F3F3\"\n            }],\n            children: [hasDraggableIcon && _jsx(View, {\n              style: styles.draggableContainer,\n              children: _jsx(View, {\n                style: [styles.draggableIcon, dragIconStyle, {\n                  backgroundColor: dragIconColor || \"#A3A3A3\"\n                }]\n              })\n            }), children]\n          }))]\n        })\n      });\n    }\n  }]);\n\n  return BottomSheet;\n}(Component);\n\nexport default BottomSheet;","map":{"version":3,"sources":["C:/Users/lnr99/Documents/WhaleDone-Client/node_modules/react-native-gesture-bottom-sheet/src/BottomSheet/index.js"],"names":["React","Component","styles","BottomSheet","props","state","modalVisible","animatedHeight","Animated","Value","pan","ValueXY","createPanResponder","visible","closeFunction","height","setState","timing","toValue","duration","useNativeDriver","start","setValue","x","y","panResponder","PanResponder","create","onStartShouldSetPanResponder","onPanResponderMove","e","gestureState","dy","event","onPanResponderRelease","gestureLimitArea","gestureDistance","setModalVisible","spring","children","hasDraggableIcon","backgroundColor","sheetBackgroundColor","dragIconColor","dragIconStyle","draggable","onRequestClose","onClose","close","radius","panStyle","transform","getTranslateTransform","wrapper","background","panHandlers","container","borderTopRightRadius","borderTopLeftRadius","draggableContainer","draggableIcon"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  View,\n  Modal,\n  TouchableOpacity,\n  Animated,\n  PanResponder,\n} from \"react-native\";\nimport styles from \"./styles\";\n\nclass BottomSheet extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalVisible: false,\n      animatedHeight: new Animated.Value(0),\n      pan: new Animated.ValueXY(),\n    };\n\n    this.createPanResponder(props);\n  }\n\n  setModalVisible(visible) {\n    const { closeFunction, height } = this.props;\n    const { animatedHeight, pan } = this.state;\n    if (visible) {\n      this.setState({ modalVisible: visible });\n      Animated.timing(animatedHeight, {\n        toValue: height,\n        duration: 300,\n        useNativeDriver: false,\n      }).start();\n    } else {\n      Animated.timing(animatedHeight, {\n        toValue: 0,\n        duration: 400,\n        useNativeDriver: false,\n      }).start(() => {\n        pan.setValue({ x: 0, y: 0 });\n        this.setState({\n          modalVisible: visible,\n          animatedHeight: new Animated.Value(0),\n        });\n        if (typeof closeFunction === \"function\") closeFunction();\n      });\n    }\n  }\n\n  createPanResponder(props) {\n    const { height } = props;\n    const { pan } = this.state;\n    this.panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onPanResponderMove: (e, gestureState) => {\n        if (gestureState.dy > 0) {\n          Animated.event([null, { dy: pan.y }], {\n            useNativeDriver: false,\n          })(e, gestureState);\n        }\n      },\n      onPanResponderRelease: (e, gestureState) => {\n        const gestureLimitArea = height / 3;\n        const gestureDistance = gestureState.dy;\n        if (gestureDistance > gestureLimitArea) {\n          this.setModalVisible(false);\n        } else {\n          Animated.spring(pan, { toValue: { x: 0, y: 0 }, useNativeDriver: false, }).start();\n        }\n      },\n    });\n  }\n\n  show() {\n    this.setModalVisible(true);\n  }\n\n  close() {\n    this.setModalVisible(false);\n  }\n\n  render() {\n    const {\n      children,\n      hasDraggableIcon,\n      backgroundColor,\n      sheetBackgroundColor,\n      dragIconColor,\n      dragIconStyle,\n      draggable = true,\n      onRequestClose,\n      onClose = () => this.close(),\n      radius,\n    } = this.props;\n    const { animatedHeight, pan, modalVisible } = this.state;\n    const panStyle = {\n      transform: pan.getTranslateTransform(),\n    };\n\n    return (\n      <Modal transparent visible={modalVisible} onRequestClose={onRequestClose}>\n        <View\n          style={[\n            styles.wrapper,\n            { backgroundColor: backgroundColor || \"#25252599\" },\n          ]}\n        >\n          <TouchableOpacity\n            style={styles.background}\n            activeOpacity={1}\n            onPress={onClose}\n          />\n          <Animated.View\n            {...(draggable && this.panResponder.panHandlers)}\n            style={[\n              panStyle,\n              styles.container,\n              {\n                height: animatedHeight,\n                borderTopRightRadius: radius || 10,\n                borderTopLeftRadius: radius || 10,\n                backgroundColor: sheetBackgroundColor || \"#F3F3F3\",\n              },\n            ]}\n          >\n            {hasDraggableIcon && (\n              <View style={styles.draggableContainer}>\n                <View\n                  style={[\n                    styles.draggableIcon,\n                    dragIconStyle,\n                    {\n                      backgroundColor: dragIconColor || \"#A3A3A3\",\n                    },\n                  ]}\n                />\n              </View>\n            )}\n            {children}\n          </Animated.View>\n        </View>\n      </Modal>\n    );\n  }\n}\n\nexport default BottomSheet;\n"]},"metadata":{},"sourceType":"module"}