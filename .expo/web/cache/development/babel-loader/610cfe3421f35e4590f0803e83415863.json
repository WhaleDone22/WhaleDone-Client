{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport ButtonBack from \"../../components/ButtonBack\";\nimport ButtonNext from \"../../components/ButtonNext\";\nimport COLORS from \"../../styles/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar icPasswordVisibleTrue = require(\"../../../assets/ic-password-visible-true.png\");\n\nvar icPasswordVisibleFalse = require(\"../../../assets/ic-password-visible-false.png\");\n\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n    paddingTop: 12,\n    backgroundColor: 'white',\n    flex: 1\n  },\n  title: {\n    fontSize: 20,\n    fontFamily: 'Pretendard-Bold',\n    marginTop: 20,\n    marginBottom: 32\n  },\n  textInput: {\n    paddingHorizontal: 16,\n    paddingVertical: 18,\n    borderRadius: 5,\n    backgroundColor: COLORS.GREY_030,\n    marginBottom: 12,\n    fontSize: 16,\n    borderColor: 'transparent'\n  },\n  eyeIconContainer: {\n    position: 'absolute',\n    right: 15,\n    top: 15\n  },\n  eyeIcon: {\n    height: 24,\n    width: 24\n  }\n});\n\nfunction LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isPasswordVisible = _useState6[0],\n      setIsPasswordVisible = _useState6[1];\n\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(ButtonBack, {\n      onPress: function onPress() {\n        return navigation.goBack();\n      }\n    }), _jsx(Text, {\n      style: styles.title,\n      children: \"\\uC774\\uBA54\\uC77C\\uACFC \\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"\n    }), _jsx(TextInput, {\n      value: email,\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      },\n      style: styles.textInput,\n      placeholderTextColor: COLORS.TEXT_DISABLED_GREY,\n      placeholder: \"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n      autoFocus: true\n    }), _jsxs(View, {\n      style: {\n        marginBottom: 48\n      },\n      children: [_jsx(TextInput, {\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        style: styles.textInput,\n        placeholderTextColor: COLORS.TEXT_DISABLED_GREY,\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        secureTextEntry: isPasswordVisible\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return setIsPasswordVisible(function (prev) {\n            return !prev;\n          });\n        },\n        style: styles.eyeIconContainer,\n        children: _jsx(Image, {\n          source: isPasswordVisible ? icPasswordVisibleFalse : icPasswordVisibleTrue,\n          style: styles.eyeIcon\n        })\n      })]\n    }), _jsx(ButtonNext, {\n      onPress: function onPress() {\n        return navigation.push('Main');\n      },\n      isActivated: true\n    })]\n  });\n}\n\nexport default LoginScreen;","map":{"version":3,"sources":["C:/Users/lnr99/Documents/WhaleDone-Client/presentation/screens/Signup/Login.tsx"],"names":["React","useState","SafeAreaView","ButtonBack","ButtonNext","COLORS","icPasswordVisibleTrue","require","icPasswordVisibleFalse","styles","StyleSheet","create","container","paddingHorizontal","paddingTop","backgroundColor","flex","title","fontSize","fontFamily","marginTop","marginBottom","textInput","paddingVertical","borderRadius","GREY_030","borderColor","eyeIconContainer","position","right","top","eyeIcon","height","width","LoginScreen","navigation","email","setEmail","password","setPassword","isPasswordVisible","setIsPasswordVisible","goBack","text","TEXT_DISABLED_GREY","prev","push"],"mappings":"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","sourcesContent":["import { NativeStackScreenProps } from '@react-navigation/native-stack';\nimport React, { useState } from 'react';\nimport {\n  Text,\n  StyleSheet,\n  TextInput,\n  View,\n  TouchableOpacity,\n  Image,\n} from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { NavigationStackParams } from '../../../infrastructures/types/NavigationStackParams';\nimport ButtonBack from '../../components/ButtonBack';\nimport ButtonNext from '../../components/ButtonNext';\nimport COLORS from '../../styles/colors';\n\nconst icPasswordVisibleTrue = require('../../../assets/ic-password-visible-true.png');\nconst icPasswordVisibleFalse = require('../../../assets/ic-password-visible-false.png');\n\ntype LoginScreenProp = NativeStackScreenProps<NavigationStackParams, 'Login'>;\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n    paddingTop: 12,\n    backgroundColor: 'white',\n    flex: 1,\n  },\n  title: {\n    fontSize: 20,\n    fontFamily: 'Pretendard-Bold',\n    marginTop: 20,\n    marginBottom: 32,\n  },\n  textInput: {\n    paddingHorizontal: 16,\n    paddingVertical: 18,\n    borderRadius: 5,\n    backgroundColor: COLORS.GREY_030,\n    marginBottom: 12,\n    fontSize: 16,\n    borderColor: 'transparent',\n  },\n  eyeIconContainer: {\n    position: 'absolute',\n    right: 15,\n    top: 15,\n  },\n  eyeIcon: {\n    height: 24,\n    width: 24,\n  },\n});\n\nfunction LoginScreen({ navigation }: LoginScreenProp) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isPasswordVisible, setIsPasswordVisible] = useState(true);\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ButtonBack onPress={() => navigation.goBack()} />\n      <Text style={styles.title}>이메일과 비밀번호를 입력하세요</Text>\n      <TextInput\n        value={email}\n        onChangeText={(text) => setEmail(text)}\n        style={styles.textInput}\n        placeholderTextColor={COLORS.TEXT_DISABLED_GREY}\n        placeholder=\"이메일을 입력하세요\"\n        autoFocus\n      />\n      <View style={{ marginBottom: 48 }}>\n        <TextInput\n          value={password}\n          onChangeText={(text) => setPassword(text)}\n          style={styles.textInput}\n          placeholderTextColor={COLORS.TEXT_DISABLED_GREY}\n          placeholder=\"비밀번호를 입력하세요\"\n          secureTextEntry={isPasswordVisible}\n        />\n        <TouchableOpacity\n          onPress={() => setIsPasswordVisible((prev) => !prev)}\n          style={styles.eyeIconContainer}\n        >\n          <Image\n            source={\n              isPasswordVisible ? icPasswordVisibleFalse : icPasswordVisibleTrue\n            }\n            style={styles.eyeIcon}\n          />\n        </TouchableOpacity>\n      </View>\n      <ButtonNext onPress={() => navigation.push('Main')} isActivated />\n    </SafeAreaView>\n  );\n}\n\nexport default LoginScreen;\n"]},"metadata":{},"sourceType":"module"}